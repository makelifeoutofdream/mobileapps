{"version":3,"sources":["webpack:///src/app/login/login.page.ts","webpack:///src/app/login/login.page.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.page.scss"],"names":["LoginPage","app","navCtrl","dbServise","formBuilder","tostService","uniqueDeviceID","uid","androidPermissions","sim","userName","password","error","whiteListedMACs","formLogin","compose","required","email","getPermission","requestReadPermission","then","console","log","getSimInfo","info","phoneNo","phoneNumber","err","showTabs","checkPermission","PERMISSION","READ_PHONE_STATE","res","hasPermission","requestPermission","alert","controls","valid","fetchUserByUserNameAndPassword","data","includes","undefined","loginUser","navigateRoot","presentToast","selector","template","LoginPageModule","imports","declarations","routes","path","component","LoginPageRoutingModule","forChild","exports"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MenuController } from '@ionic/angular';\nimport { ClientPage } from '../client/client.page';\nimport { NavController } from '@ionic/angular';\nimport { AppComponent } from '../app.component';\nimport { User } from '../services/user';\nimport { DbService } from '../services/db.service';\nimport { ToastserviceService } from '../services/toastservice.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EmailComposer } from '@ionic-native/email-composer/ngx';\nimport { UniqueDeviceID } from '@ionic-native/unique-device-id/ngx';\nimport { Uid } from '@ionic-native/uid/ngx';\nimport { AndroidPermissions } from '@ionic-native/android-permissions/ngx';\nimport { Sim } from '@ionic-native/sim/ngx';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  phoneNo : string ;\n  userName : any=\"\";\n  password : any=\"\";\n  loginUser : User;  \n  formLogin : FormGroup;\n  error : boolean =false;\n  errorMessage : string ;\n  private whiteListedMACs : string []=['919074292305','0564863010','0508812145','919074247482','0560545887']\n  constructor(public app:AppComponent,public navCtrl:NavController,public dbServise:DbService,\n    formBuilder : FormBuilder,public tostService:ToastserviceService,\n    private uniqueDeviceID: UniqueDeviceID,\n    private uid: Uid,\n    private androidPermissions: AndroidPermissions,private sim: Sim) {\n      this.formLogin=new FormGroup({\n        password : new FormControl('',Validators.compose([Validators.required])),\n        email : new FormControl('',Validators.compose([Validators.required])) \n      })\n      this.getPermission();\n      this.sim.requestReadPermission().then(\n        () => console.log('Permission granted'),\n        () => console.log('Permission denied')\n      );\n\n      this.sim.getSimInfo().then(\n        (info) => {\n          console.log('Sim info: ', info),\n        //  alert('sim info'+JSON.stringify(info) );\n          this.phoneNo=info.phoneNumber\n        },\n        (err) => console.log('Unable to get sim info: ', err)\n      );\n   }\n\n  ngOnInit() {\n    this.app.showTabs=false;\n  }\n\n  getPermission(){\n    this.androidPermissions.checkPermission(\n      this.androidPermissions.PERMISSION.READ_PHONE_STATE\n    ).then(res => {\n      if(res.hasPermission){\n        \n      }else{\n        this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.READ_PHONE_STATE).then(res => {\n          alert(\"Persmission Granted Please Restart App!\");\n        }).catch(error => {\n          alert(\"Error! \"+error);\n        });\n      }\n    }).catch(error => {\n      alert(\"Error! \"+error);\n    });\n  }\n\n  get errorControl() {\n    return this.formLogin.controls;\n  }\n  login(){\n    if(!this.formLogin.valid){\n      \n      return ;  \n    }\n    \n    this.dbServise.fetchUserByUserNameAndPassword(this.userName,this.password).then(data=>{\n      if(this.whiteListedMACs.includes(this.phoneNo)){\n\n        if(data!=null && data!=undefined){\n          this.loginUser=data;\n          this.app.showTabs=true;\n          this.navCtrl.navigateRoot('dashboard');\n        }else{\n          this.tostService.presentToast(\"Incorrect username or password\");\n        }\n      }else{\n        this.tostService.presentToast(\"Configuration Error\");\n     }\n\n    }).catch(err=>{\n        console.log(err);\n        this.tostService.presentToast(\"Incorrect username or password\");\n    });\n    \n    \n  }\n\n  fetchUserByPormise(userName : any,password : any){\n    return this.dbServise.fetchUserByUserNameAndPassword(userName,password).then\n  }\n\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  \\n  <div style=\\\"margin-top: 50%;\\\">\\n    <form [formGroup]=\\\"formLogin\\\">\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input name=\\\"username\\\" type=\\\"text\\\" [(ngModel)]=\\\"userName\\\" formControlName=\\\"email\\\" required></ion-input>\\n       \\n    </ion-item>\\n    \\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input name=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\"   formControlName=\\\"password\\\"  required></ion-input>\\n    </ion-item>\\n  </form>\\n\\n    <ion-row>\\n      <ion-col>\\n        <ion-button type=\\\"submit\\\" color=\\\"primary\\\" (click)=\\\"login()\\\" expand=\\\"block\\\" >Login</ion-button>\\n        \\n      </ion-col>\\n      \\n    </ion-row>\\n    <ion-row>\\n      <!-- <ion-col class=\\\"ion-text-left\\\">\\n        <a [routerLink]=\\\"['/forgot-password']\\\" class=\\\"small-text\\\">Forgot Password?</a>\\n      </ion-col> -->\\n      <ion-col class=\\\"ion-text-right\\\">\\n        <a [routerLink]=\\\"['/register']\\\" class=\\\"small-text\\\">Create Account</a>\\n      </ion-col>\\n    </ion-row>\\n  </div>\\n  \\n  \\n  \\n\\n</ion-content>  \";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule, \n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule,FormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","export default \".verticalCenter {\\n  margin-top: 14%;\\n  margin-left: 10%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLGVBQUE7RUFDQSxnQkFBQTtBQUNEIiwiZmlsZSI6ImxvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi52ZXJ0aWNhbENlbnRlciB7XG5cdG1hcmdpbi10b3A6IDE0JTtcblx0bWFyZ2luLWxlZnQ6IDEwJTtcblx0XG59XG4iXX0= */\";"]}