{"version":3,"sources":["./src/app/client/client.page.ts","./src/app/client/client.page.html","./src/app/client/client.module.ts","./src/app/client/client-routing.module.ts","./src/app/client/client.page.scss"],"names":[],"mappings":"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","file":"client-client-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NavigationExtras } from '@angular/router';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { DataService } from '../data.service';\nimport { Customer } from '../services/customer';\nimport { DbService } from '../services/db.service';\nimport { Inventory } from '../services/inventory';\nimport { ToastserviceService } from '../services/toastservice.service';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.page.html',\n  styleUrls: ['./client.page.scss'],\n})\nexport class ClientPage implements OnInit {\n\n  private customers : Customer[];\n  private customer : Customer;\n  private inventoryList : Inventory [];\n  constructor(public navCtrl:NavController,public dbService:DbService,\n    public tostService : ToastserviceService,public alertController: AlertController,\n    private dataService  :DataService) { }\n\n  ngOnInit() {\n    console.log(\"init called\");\n    this.customers=[];\n  }\n\n  addNewClient(){\n    \n    this.navCtrl.navigateRoot('newclient');\n  }\n\n  ionViewWillEnter(){\n    this.dbService.getAllCustomers().then(data=>{\n      this.customers=data;\n    }).catch(reason=>{\n      console.log(reason);\n      this.tostService.presentToast(\"Failed to fetch the customers\"); \n    })\n  }\n\n  async getSelectedCustomer(name) : Promise<Customer>{\n    return this.customers.find(cus=>cus.name==name);\n  }\n  async populateCustomerItems (name): Promise<Customer>{\n    this.customer=await this.getSelectedCustomer(name);\n    this.inventoryList=await this.dbService.getAllInventories();\n    if(this.customer.itemList==null || this.customer.itemList==undefined){\n      this.customer.itemList=new Array();\n    }\n    this.customer=await this.setItemsToCustomer();\n    return this.customer;\n  }\n\n  async setItemsToCustomer() : Promise<Customer>{\n    for(let inv of this.inventoryList){\n     \n        if(this.customer.itemList.find(it=>it.id==inv.id)==null || this.customer.itemList.find(it=>it.id==inv.id)==null){\n          this.customer.itemList.push(inv);\n        }else{\n          var index = this.customer.itemList.findIndex(i => i.id == inv.id);\n          this.customer.itemList[index].name=inv.name;\n          this.customer.itemList[index].description=inv.description;\n          this.customer.itemList[index].purchasePrice=inv.purchasePrice;\n        }\n    }\n    return this.customer;\n  }\n  async editCustomer(name){\n    this.customer=await this.populateCustomerItems(name);\n    let navigationExtras : NavigationExtras ={\n          queryParams : {customer : this.customer}\n    };\n    console.log(\"selected customer\"+this.customer);\n  this.navCtrl.navigateRoot('editclient',navigationExtras);    \n  }\ndeleteCustomer(cus : Customer){\n  \n    this.dbService.deleteCustomer(cus).then(data=>{\n      this.tostService.presentToast('Customer removed successfully');\n      this.dbService.getAllCustomers().then(data=>{\n        this.customers=data;\n      })\n  });\n\n}\nasync presentDeleteAlertConfirm(cus : Customer) {\n  const alert = await this.alertController.create({\n   // cssClass: 'my-custom-class',\n    header: 'Confirm!',\n    message: '<strong>Are you sure to delete this customer?</strong>!!!',\n    buttons: [\n      {\n        text: 'No',\n        role: 'cancel',\n        cssClass: 'secondary',\n        handler: (blah) => {\n          console.log('Confirm Cancel');\n        }\n      }, {\n        text: 'Yes',\n        handler: () => {\n          this.deleteCustomer(cus);\n        }\n      }\n    ]\n  });\n\n  await alert.present();\n}\n\ndownload() {\n  let customerDataList = new Array();\n  for (let cus of this.customers) {\n    \n      \n      let cusData = { Name: cus.name, ContactPerson: cus.contactPersonName,Mobile:cus.mobile,Address : cus.street+','+cus.city+','+cus.country,\n      Balance : cus.balance \n        };\n        customerDataList.push(cusData);\n    \n\n  }\n  this.dataService.exportToExcel(customerDataList, 'customers.xlsx');\n\n\n}\n\n\n}\n\n\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Customer</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button menu=\\\"mainmenu\\\"> \\n\\n        </ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item *ngFor= \\\"let cus of customers\\\">\\n      <ion-label>{{cus.name}}</ion-label>\\n      <ion-button color=\\\"secondary\\\" (click)=\\\"editCustomer(cus.name)\\\">Edit</ion-button>\\n      <ion-button (click)=\\\"presentDeleteAlertConfirm(cus)\\\">\\n        <ion-icon name=\\\"trash-bin\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n  </ion-list>    \\n  \\n</ion-content>\\n<ion-footer>\\n  \\n    \\n      <ion-row style=\\\"float:right\\\">\\n        <ion-col style=\\\"float: right;\\\">\\n          <ion-button ion-button  color=\\\"primary\\\" (click)=\\\"download()\\\">\\n            <ion-icon name=\\\"mail\\\"></ion-icon>\\n          </ion-button>\\n        </ion-col>\\n        <ion-col >\\n        <ion-button  color=\\\"primary\\\" (click)=\\\"addNewClient()\\\">\\n          <ion-icon name=\\\"add-circle\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      </ion-row>\\n        \\n    \\n  \\n  \\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ClientPageRoutingModule } from './client-routing.module';\n\nimport { ClientPage } from './client.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ClientPageRoutingModule\n  ],\n  declarations: [ClientPage]\n})\nexport class ClientPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ClientPage } from './client.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClientPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbGllbnQucGFnZS5zY3NzIn0= */\";"],"sourceRoot":"webpack:///"}