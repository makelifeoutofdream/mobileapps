{"version":3,"sources":["webpack:///src/app/inventory/inventory.page.scss","webpack:///src/app/inventory/inventory.page.html","webpack:///src/app/inventory/inventory.page.ts","webpack:///src/app/inventory/inventory-routing.module.ts","webpack:///src/app/inventory/inventory.module.ts"],"names":["InventoryPage","dbService","toastService","navCtrl","alertController","navigateRoot","getAllInventories","then","data","inventories","reason","console","log","inv","navigationExtras","queryParams","inventory","deleteInventory","presentToast","updateInventoryToCustomers","invList","getAllCustomers","cusList","cus","itemList","UpdateCustomer","create","header","message","buttons","text","role","cssClass","handler","blah","alert","present","selector","template","routes","path","component","InventoryPageRoutingModule","imports","forChild","exports","InventoryPageModule","declarations"],"mappings":"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","file":"inventory-inventory-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbnZlbnRvcnkucGFnZS5zY3NzIn0= */\";","export default \"\\n\\n<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Inventory</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button menu=\\\"mainmenu\\\"> \\n\\n        </ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content style=\\\"background-color: darkblue;\\\">\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Name</ion-label>\\n      <ion-label>Quantity</ion-label>\\n      <ion-label>Unit Price</ion-label>\\n      <ion-label>Purchase Price</ion-label>\\n      <ion-label>Delete</ion-label>\\n    </ion-list-header>\\n    <ion-item *ngFor= \\\"let inv of inventories\\\" >\\n      <ion-label (click)=\\\"editInventory(inv)\\\" >{{inv.name}}</ion-label>\\n      <ion-label (click)=\\\"editInventory(inv)\\\">{{inv.quantity}}</ion-label>\\n      <ion-label (click)=\\\"editInventory(inv)\\\">{{inv.unitPrice}}</ion-label>\\n      <ion-label (click)=\\\"editInventory(inv)\\\">{{inv.purchasePrice}}</ion-label>\\n      <ion-button (click)=\\\"presentDeleteAlertConfirm(inv)\\\">\\n        <ion-icon name=\\\"trash-bin\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n  </ion-list>    \\n  \\n</ion-content>\\n<ion-footer>\\n  \\n    \\n      <ion-row style=\\\"float:right\\\">\\n        <ion-col >\\n        <ion-button  color=\\\"primary\\\" (click)=\\\"addNewInventory()\\\">\\n          <ion-icon name=\\\"add-circle\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      </ion-row>\\n        \\n    \\n  \\n  \\n</ion-footer>\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { Customer } from '../services/customer';\nimport { DbService } from '../services/db.service';\nimport { Inventory } from '../services/inventory';\nimport { ToastserviceService } from '../services/toastservice.service';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.page.html',\n  styleUrls: ['./inventory.page.scss'],\n})\nexport class InventoryPage implements OnInit {\n  private inventories : Inventory [];\n  constructor(public dbService : DbService,public toastService : ToastserviceService,\n    public navCtrl:NavController,public alertController: AlertController) { }\n\n  ngOnInit() {\n  }\n\n  addNewInventory(){\n    \n    this.navCtrl.navigateRoot('newinventory');\n  }\n\n  async getAllInventories() : Promise<any>{\n    this.dbService.getAllInventories().then(data=>{\n      this.inventories=data;\n    }).catch(reason=>{\n      console.log(reason);\n    })\n  }\n\n  ionViewWillEnter(){\n    this.getAllInventories();\n  }\n\n  editInventory(inv){\n    let navigationExtras : NavigationExtras ={\n      queryParams : {inventory : inv}\n    };\n  console.log(\"selected inventory\"+inv);\n  this.navCtrl.navigateRoot('newinventory',navigationExtras);    \n  }\n\n  deleteInventory(inv){\n    this.dbService.deleteInventory(inv).then(data=>{\n      this.toastService.presentToast('Inventory removed successfully');\n      this.getAllInventories().then(data=>{\n        this.updateInventoryToCustomers();\n      })\n  });\n}\n\nupdateInventoryToCustomers(){\n    this.dbService.getAllInventories().then(invList=>{\n\n      this.dbService.getAllCustomers().then(data=>{\n        let cusList : Customer=data;\n        for(let cus of data){\n          cus.itemList=invList;\n          this.dbService.UpdateCustomer(cus);\n        }\n      })\n    })\n    \n  }\n\n  async presentDeleteAlertConfirm(inv : Inventory) {\n    const alert = await this.alertController.create({\n     // cssClass: 'my-custom-class',\n      header: 'Confirm!',\n      message: '<strong>Are you sure to delete this inventory?</strong>!!!',\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Yes',\n          handler: () => {\n            this.deleteInventory(inv);\n          }\n        }\n      ]\n    });\n  \n    await alert.present();\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InventoryPage } from './inventory.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InventoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InventoryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InventoryPageRoutingModule } from './inventory-routing.module';\n\nimport { InventoryPage } from './inventory.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InventoryPageRoutingModule\n  ],\n  declarations: [InventoryPage]\n})\nexport class InventoryPageModule {}\n"]}