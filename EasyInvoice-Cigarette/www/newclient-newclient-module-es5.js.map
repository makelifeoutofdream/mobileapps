{"version":3,"sources":["webpack:///src/app/newclient/newclient.page.html","webpack:///src/app/newclient/newclient.module.ts","webpack:///src/app/newclient/newclient.page.ts","webpack:///src/app/newclient/newclient.page.scss","webpack:///src/app/newclient/newclient-routing.module.ts"],"names":["NewclientPageModule","imports","declarations","NewclientPage","dbService","tostService","navCtrl","resetCustomer","incrementCustomerCode","then","data","getCustomerCode","undefined","customer","code","codeConstant","customerCodeConstant","personalDetails","address","contactDetails","payment","setCustomerCode","getAllInventories","inventoryList","id","name","itemList","nameInArabic","contactPersonName","contactPersonNameInArabic","buildingNumber","street","streetInArabic","city","cityInArabic","district","districtInArabic","country","countryInArabic","pobox","postalCode","phoneNumber","mobile","email","vatNumber","crNumber","creditLimit","balance","createCustomer","updateInventoryToCustomers","presentToast","reason","console","log","navigateRoot","invList","resp","getAllCustomers","cusList","cus","UpdateCustomer","item","selector","template","routes","path","component","NewclientPageRoutingModule","forChild","exports"],"mappings":"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","file":"newclient-newclient-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button menu=\\\"mainmenu\\\"> \\n\\n      </ion-menu-button>\\n    </ion-buttons> \\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-back-button defaultHref=\\\"home\\\" (click)=\\\"showClient()\\\"> </ion-back-button>\\n      \\n    </ion-buttons>\\n    <ion-title>New Customer</ion-title>\\n  </ion-toolbar>\\n  \\n</ion-header>\\n<ion-content>\\n  <ion-card  >\\n    <ion-card-header (click)=\\\"expandItem('PERSONAL')\\\">\\n      <ion-card-title>Personal Details</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <app-expandable expandHeight=\\\"240px\\\" [expanded]=\\\"personalDetails\\\">\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\">Customer Code</ion-label>\\n                  <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.code\\\" required></ion-input>\\n                </ion-item>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">Name</ion-label>\\n                <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.name\\\" required></ion-input>\\n              </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">اسم</ion-label>\\n                <ion-input name=\\\"namearabic\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.nameInArabic\\\" required></ion-input>\\n              </ion-item> \\n             </ion-col>\\n            \\n            \\n          </ion-row>\\n          \\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">Contact Name</ion-label>\\n                <ion-input name=\\\"contactpersonname\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.contactPersonName\\\" required></ion-input>\\n              </ion-item>\\n            </ion-col>\\n\\n            <ion-col size=\\\"6\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">اسم جهة الاتصال</ion-label>\\n                <ion-input name=\\\"contactpersonname\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.contactPersonNameInArabic\\\" required></ion-input>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n          </ion-grid>\\n      </app-expandable>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card  >\\n    <ion-card-header (click)=\\\"expandItem('ADDRESS')\\\">\\n      <ion-card-title>Address</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <app-expandable expandHeight=\\\"440px\\\" [expanded]=\\\"address\\\">\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\">Building No</ion-label>\\n                  <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.buildingNumber\\\" required></ion-input>\\n                </ion-item>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">Street</ion-label>\\n                <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.street\\\" required></ion-input>\\n              </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">شارع</ion-label>\\n                <ion-input name=\\\"namearabic\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.streetInArabic\\\" required></ion-input>\\n              </ion-item> \\n             </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">City</ion-label>\\n                <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.city\\\" required></ion-input>\\n              </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">مدينة</ion-label>\\n                <ion-input name=\\\"namearabic\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.cityInArabic\\\" required></ion-input>\\n              </ion-item> \\n             </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">District</ion-label>\\n                <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.district\\\" required></ion-input>\\n              </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">يصرف</ion-label>\\n                <ion-input name=\\\"namearabic\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.districtInArabic\\\" required></ion-input>\\n              </ion-item> \\n             </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">Country</ion-label>\\n                <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.country\\\" required></ion-input>\\n              </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">دولة</ion-label>\\n                <ion-input name=\\\"namearabic\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.countryInArabic\\\" required></ion-input>\\n              </ion-item> \\n             </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">PO Box</ion-label>\\n                <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.pobox\\\" required></ion-input>\\n              </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">Postal Code</ion-label>\\n                <ion-input name=\\\"namearabic\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.postalCode\\\" required></ion-input>\\n              </ion-item> \\n             </ion-col>\\n          </ion-row>\\n          \\n          </ion-grid>\\n      </app-expandable>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card  >\\n    <ion-card-header (click)=\\\"expandItem('CONTACT')\\\">\\n      <ion-card-title>Contact</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <app-expandable expandHeight=\\\"240px\\\" [expanded]=\\\"contactDetails\\\">\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\">Phone No</ion-label>\\n                  <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.phoneNumber\\\" required></ion-input>\\n                </ion-item>\\n            </ion-col>\\n\\n            <ion-col size=\\\"6\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Mobile</ion-label>\\n                <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.mobile\\\" required></ion-input>\\n              </ion-item>\\n          </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">Email</ion-label>\\n                <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.email\\\" required></ion-input>\\n              </ion-item>\\n              </ion-col>   \\n          </ion-row>\\n          \\n          </ion-grid>\\n      </app-expandable>\\n    </ion-card-content>\\n  </ion-card>\\n\\n\\n  <ion-card  >\\n    <ion-card-header (click)=\\\"expandItem('PAYMENT')\\\">\\n      <ion-card-title>Payment</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <app-expandable expandHeight=\\\"240px\\\" [expanded]=\\\"payment\\\">\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\">VAT No</ion-label>\\n                  <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.vatNumber\\\" required></ion-input>\\n                </ion-item>\\n            </ion-col>\\n\\n            <ion-col size=\\\"6\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">CR No</ion-label>\\n                <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.crNumber\\\" required></ion-input>\\n              </ion-item>\\n          </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n              <ion-item >\\n                <ion-label position=\\\"floating\\\">Credit Limit</ion-label>\\n                <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.creditLimit\\\" required></ion-input>\\n              </ion-item>\\n              </ion-col>   \\n              <ion-col size=\\\"6\\\">\\n                <ion-item >\\n                  <ion-label position=\\\"floating\\\">Balance</ion-label>\\n                  <ion-input name=\\\"name\\\" type=\\\"number\\\" [(ngModel)]=\\\"customer.balance\\\" required></ion-input>\\n                </ion-item>\\n                </ion-col>   \\n          </ion-row>\\n          \\n          </ion-grid>\\n      </app-expandable>\\n    </ion-card-content>\\n  </ion-card>\\n\\n\\n  \\n<ion-row style=\\\"float:right\\\">\\n  <ion-col >\\n  <ion-button  color=\\\"primary\\\" (click)=\\\"addNewClient()\\\">\\n    <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n   \\n    \\n  </ion-button>\\n</ion-col>\\n</ion-row>\\n\\n</ion-content>\\n<ion-footer>\\n  \\n    \\n    \\n\\n\\n\\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewclientPageRoutingModule } from './newclient-routing.module';\n\nimport { NewclientPage } from './newclient.page';\nimport { ExpandableComponent } from '../components/expandable/expandable.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NewclientPageRoutingModule\n  ],\n  declarations: [NewclientPage,ExpandableComponent]\n})\nexport class NewclientPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { promise } from 'protractor';\nimport { Customer } from '../services/customer';\nimport { DbService } from '../services/db.service';\nimport { Inventory } from '../services/inventory';\nimport { ToastserviceService } from '../services/toastservice.service';\n\n@Component({\n  selector: 'app-newclient',\n  templateUrl: './newclient.page.html',\n  styleUrls: ['./newclient.page.scss'],\n})\nexport class NewclientPage implements OnInit {\n  private customer : Customer ;\n  private inventoryList : Inventory[];\n  private personalDetails: boolean ;\n  private address : boolean ;\n  private contactDetails : boolean;\n  private payment : boolean;\n  constructor(public dbService:DbService,public tostService:ToastserviceService,public navCtrl:NavController) { }\n\n  ngOnInit() {\n   this.resetCustomer();\n    //this.setCustomerCode();\n   \n  }\n  setCustomerCode(){\n    this.dbService.incrementCustomerCode().then(data=>{\n      this.dbService.getCustomerCode().then(data=>{\n        if(data==null || data==undefined){\n          data=1;\n        }\n        this.customer.code=this.dbService.codeConstant+this.dbService.customerCodeConstant+ data;\n      })\n    })\n    \n  }\n  ionViewWillEnter(){\n    this.personalDetails=false;\n    this.address=false;;\n    this.contactDetails=false;\n    this.payment=false;\n    this.setCustomerCode();\n    this.dbService.getAllInventories().then(data=>{\n      this.inventoryList=data;\n    })\n  }\n\n  resetCustomer(){\n    this.customer={id:null,code:null,name : \"\" ,itemList : null,nameInArabic : \"\",contactPersonName: \"\",contactPersonNameInArabic:\"\",\n      buildingNumber:\"\",street:\"\",streetInArabic:\"\",city:\"\",cityInArabic:\"\",district:\"\",districtInArabic:\"\",country:\"\",countryInArabic:\"\",\n      pobox:\"\",postalCode:\"\",phoneNumber:\"\",mobile:\"\",email:\"\",vatNumber:\"\",crNumber:\"\",creditLimit:null,balance:null};\n  }\n\n  async addNewClient() :Promise<any>{\n    this.customer.itemList=this.inventoryList;\n    this.dbService.createCustomer(this.customer).then(data=>{\n      this.updateInventoryToCustomers();\n      this.tostService.presentToast(\"Customer added successfully\");      \n    }).catch(reason=>{\n      console.log(reason);\n    }).finally(()=>{\n      this.resetCustomer();\n      this.navCtrl.navigateRoot('client');\n    });\n  } \n\n  updateInventoryToCustomers(){\n    let invList : Inventory[];\n    this.dbService.getAllInventories().then(resp=>{\n      invList=resp;\n      this.dbService.getAllCustomers().then(data=>{\n        let cusList : Customer=data;\n        for(let cus of data){\n          cus.itemList=invList;\n          this.dbService.UpdateCustomer(cus);\n        }\n      })\n    })\n    \n  }\n  \n  showClient(){\n    this.navCtrl.navigateRoot('client');\n  }\n  expandItem(item){\n    if('PERSONAL'==item){\n      this.personalDetails=!this.personalDetails;\n    }else if('ADDRESS'==item){\n      this.address=!this.address;\n    }else if('CONTACT'==item){\n      this.contactDetails=!this.contactDetails;\n    }else if('PAYMENT'==item){\n      this.payment=!this.payment;\n    }\n  }\n}\n","export default \".fullwidthinput {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL25ld2NsaWVudC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0FBQ0oiLCJmaWxlIjoibmV3Y2xpZW50LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsd2lkdGhpbnB1dHtcbiAgICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewclientPage } from './newclient.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewclientPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewclientPageRoutingModule {}\n"]}