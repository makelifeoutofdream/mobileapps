{"version":3,"sources":["webpack:///src/app/editpurchase/editpurchase-routing.module.ts","webpack:///src/app/editpurchase/editpurchase.page.scss","webpack:///src/app/editpurchase/editpurchase.page.ts","webpack:///src/app/editpurchase/editpurchase.page.html","webpack:///src/app/editpurchase/editpurchase.module.ts"],"names":["routes","path","component","EditpurchasePageRoutingModule","imports","forChild","exports","EditpurchasePage","dbService","toastService","navCtrl","route","validationService","showTable","resetPurchase","purchase","id","poNumber","purchaseDate","Date","deliveryDate","purchaseItems","supplier","getAllInventories","then","data","products","getAllSuppliers","supplierList","queryParams","subscribe","params","console","log","deafultProducts","pitem","inv","code","name","nameInArabic","description","quantity","unitPrice","purchasePrice","item","push","e1","e2","evt","selectedProducts","value","tempList","index","findIndex","i","p","pItem","orderQuantity","deliverQuantity","price","undefined","numericOnly","updatePurchase","updateStock","presentToast","showPurchase","reason","navigateRoot","selector","template","EditpurchasePageModule","declarations"],"mappings":"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","file":"editpurchase-editpurchase-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditpurchasePage } from './editpurchase.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditpurchasePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditpurchasePageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0cHVyY2hhc2UucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { DbService } from '../services/db.service';\nimport { Inventory } from '../services/inventory';\nimport { Purchase } from '../services/purchase';\nimport { PurchaseItem } from '../services/PurchaseItem';\nimport { Supplier } from '../services/supplier';\nimport { ToastserviceService } from '../services/toastservice.service';\nimport { ValidationService } from '../validation.service';\n\n@Component({\n  selector: 'app-editpurchase',\n  templateUrl: './editpurchase.page.html',\n  styleUrls: ['./editpurchase.page.scss'],\n})\nexport class EditpurchasePage implements OnInit {\n\n  constructor(private dbService : DbService,private toastService : ToastserviceService,public navCtrl:NavController,\n    private route : ActivatedRoute,private validationService  :ValidationService) { }\n  private supplierList : any;\n  private deafultProducts : Inventory[];\n  private products : Inventory[];\n  private selectedProducts : Inventory[];\n  private purchase : Purchase;\n  private showTable=false;\n  \n  ngOnInit() {\n    this.resetPurchase();\n  }\n\n  resetPurchase(){\n    this.purchase={id: null,poNumber:null,purchaseDate:new Date(),deliveryDate:new Date(),purchaseItems:[],supplier:null}\n  }\n  \n  ionViewWillEnter(){\n    this.showTable=false;\n    \n    this.dbService.getAllInventories().then(data=>{\n      this.products=data;\n    }).then(data=>{\n      this.dbService.getAllSuppliers().then(data=>{\n        this.supplierList=data;\n      }).then(data=>{\n\n    this.route.queryParams.subscribe(params=>{\n      this.purchase=params['purchase'];\n      console.log(\"purchase selected\"+this.purchase.supplier.id);\n      this.deafultProducts=[];\n      for(let pitem of this.purchase.purchaseItems){\n        let inv : Inventory={id:null,code:\"\",name:\"\",nameInArabic:\"\",description:\"\",quantity:null,unitPrice:null,purchasePrice:null}\n        inv=pitem.item;\n        this.deafultProducts.push(inv);\n      }\n      this.showTable=true;\n    })\n      })\n    })\n    \n\n  }\n\n  compareSupplier(e1: Supplier, e2: Supplier): boolean {\n    return e1 && e2 ? e1.id == e2.id : e1 == e2;\n  }\n\n  productSelected(evt){\n    this.selectedProducts=evt.value;\n    let  tempList : PurchaseItem [];\n    tempList=[];\n    for(let inv of this.selectedProducts){\n      var index = this.purchase.purchaseItems.findIndex(i => i.item.id == inv.id);\n      let p : PurchaseItem=this.purchase.purchaseItems[index];\n      let pItem : PurchaseItem={item:{id:null,code:\"\",name:\"\",nameInArabic:\"\",description:\"\",quantity:null,purchasePrice:null,unitPrice:null},orderQuantity:null,deliverQuantity:null,price:null}; \n      pItem.item=inv;\n      if(p!=null && p!=undefined){\n        pItem.deliverQuantity=p.deliverQuantity\n        pItem.orderQuantity=p.orderQuantity;\n        pItem.price=p.price;\n        \n      }\n      tempList.push(pItem);\n      }\n    \n      this.purchase.purchaseItems=tempList;\n      this.showTable=true;\n    \n  }\n\n  numericOnly(evt){\n    return this.validationService.numericOnly(evt);\n  }\n  editPurchase(){\n    this.dbService.updatePurchase(this.purchase).then(data=>{\n      this.dbService.updateStock(this.purchase.purchaseItems).then(data=>{\n        this.toastService.presentToast(\"Purchase updated successfully\");\n        return this.showPurchase();\n      });\n      \n      \n    } ).catch(reason=>{\n      this.toastService.presentToast(\"Failed to save update \"+reason);\n    })\n  }\n  showPurchase(){\n    this.navCtrl.navigateRoot('purchase');\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button menu=\\\"mainmenu\\\"> \\n\\n      </ion-menu-button>\\n    </ion-buttons> \\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-back-button defaultHref=\\\"home\\\" (click)=\\\"showPurchase()\\\"> </ion-back-button>\\n      \\n    </ion-buttons>\\n    <ion-title>New Purchase</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"6\\\">\\n          <ion-item style=\\\"margin-top: 2%;\\\">\\n            <ion-label position=\\\"floating\\\">PO No</ion-label>\\n            <ion-input name=\\\"poNumber\\\" type=\\\"text\\\" [(ngModel)]=\\\"purchase.poNumber\\\" required></ion-input>\\n          </ion-item>\\n      </ion-col>\\n      <ion-col size=\\\"6\\\">\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Date</ion-label>\\n          <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"purchase.purchaseDate\\\" required ></ion-datetime>\\n        </ion-item>\\n    </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"6\\\">\\n        <ion-item style=\\\"margin-top: 7%;\\\">\\n        <ion-select style=\\\"margin-top: 2%;height: 30px;margin-right: 4%;\\\" (ionChange)=\\\"selectSupplier($event)\\\" [(ngModel)]=\\\"purchase.supplier\\\" placeholder=\\\"Select Supplier\\\" [compareWith]=\\\"compareSupplier\\\">\\n          <ion-select-option   *ngFor=\\\"let sup of supplierList\\\" [value]=\\\"sup\\\">{{sup.name}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n        <ion-item >\\n          <ion-label position=\\\"floating\\\">Delivery Date</ion-label>\\n          <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"purchase.deliveryDate\\\" required ></ion-datetime>\\n        </ion-item> \\n       </ion-col>\\n    </ion-row>\\n    \\n<table *ngIf=\\\"showTable\\\" border=\\\"none\\\" style=\\\"width: 98%;margin-left: 1%;margin-right: 1%;margin-top: 1%; color: black;background-color: aliceblue; text-align: center;\\\">\\n  <tr style=\\\"border: none; color: white; background-color: lightslategray;\\\">\\n    \\n    <td style=\\\"width: 60%;\\\">\\n      Item\\n    </td>\\n    <td style=\\\"width: 20%;\\\">\\n      Order Qty\\n    </td>\\n    <td style=\\\"width: 20%;\\\">\\n      Received Qty\\n    </td>\\n    \\n  </tr>\\n  <tr *ngFor= \\\"let pItem of purchase.purchaseItems\\\" style=\\\"border: none;\\\">\\n    \\n    <td><ion-input style=\\\"text-align: left;\\\" disabled [(ngModel)]=\\\"pItem.item.name\\\" ></ion-input></td>\\n    <td><ion-input  type=\\\"number\\\" [(ngModel)]=\\\"pItem.orderQuantity\\\"  (keypress)=\\\"numericOnly($event)\\\"></ion-input></td>\\n    <td><ion-input  type=\\\"number\\\" [(ngModel)]=\\\"pItem.deliverQuantity\\\"  (keypress)=\\\"numericOnly($event)\\\"></ion-input></td>\\n    \\n  </tr>\\n</table>\\n    </ion-grid>\\n    <ion-row style=\\\"float:right\\\">\\n      <ion-col >\\n      <ion-button  color=\\\"primary\\\" (click)=\\\"editPurchase()\\\">\\n        <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n       \\n        \\n      </ion-button>\\n    </ion-col>\\n    </ion-row>\\n    \\n    \\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditpurchasePageRoutingModule } from './editpurchase-routing.module';\n\nimport { EditpurchasePage } from './editpurchase.page';\nimport { IonicSelectableModule } from 'ionic-selectable';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditpurchasePageRoutingModule,\n    IonicSelectableModule\n  ],\n  declarations: [EditpurchasePage]\n})\nexport class EditpurchasePageModule {}\n"]}