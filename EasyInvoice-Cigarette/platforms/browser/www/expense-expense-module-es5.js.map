{"version":3,"sources":["webpack:///src/app/expense/expense-routing.module.ts","webpack:///src/app/expense/expense.page.scss","webpack:///src/app/expense/expense.module.ts","webpack:///src/app/expense/expense.page.ts","webpack:///src/app/expense/expense.page.html"],"names":["routes","path","component","ExpensePageRoutingModule","imports","forChild","exports","ExpensePageModule","declarations","ExpensePage","dbService","toastService","navCtrl","loadingController","startDate","Date","endDate","getAllExpenses","then","data","expenseList","filterExpenses","undefined","length","map","itm","amount","reduce","acc","nxt","navigateRoot","id","expense","filter","a","navigationExtras","queryParams","console","log","JSON","stringify","create","cssClass","message","duration","loading","present","applyFilter","getTotalExpense","totalExpense","dismiss","start","end","getFullYear","getMonth","getDate","setHours","setMinutes","setSeconds","inv","date","getTime","selector","template"],"mappings":"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","file":"expense-expense-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExpensePage } from './expense.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExpensePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExpensePageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJleHBlbnNlLnBhZ2Uuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExpensePageRoutingModule } from './expense-routing.module';\n\nimport { ExpensePage } from './expense.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ExpensePageRoutingModule\n  ],\n  declarations: [ExpensePage]\n})\nexport class ExpensePageModule {}\n","import { JsonPipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { NavigationExtras } from '@angular/router';\nimport { LoadingController, NavController } from '@ionic/angular';\nimport { DbService } from '../services/db.service';\nimport { Expense } from '../services/expense';\nimport { ToastserviceService } from '../services/toastservice.service';\n\n@Component({\n  selector: 'app-expense',\n  templateUrl: './expense.page.html',\n  styleUrls: ['./expense.page.scss'],\n})\nexport class ExpensePage implements OnInit {\n  private expenseList : Expense[];\n  private expense : Expense;\n  private startDate  : Date;\n  private endDate  : Date;\n  private filterExpenses  : Expense[];\n  private totalExpense : number;\n  constructor(private dbService : DbService,private toastService :ToastserviceService, public navCtrl:NavController,\n    public loadingController: LoadingController) { }\n\n  ngOnInit() {\n  }\n\n\n  ionViewWillEnter(){\n    this.startDate =new Date();\n    this.endDate=new Date();\n   \n  }\n\n  async getAllExpenses():Promise<any>{\n      this.dbService.getAllExpenses().then(data=>{\n        this.expenseList=data;\n      });\n  }\n\n async getTotalExpense():Promise<any>{\n  if (this.filterExpenses != null && this.filterExpenses != undefined && this.filterExpenses.length) {\n    return this.filterExpenses.map(itm => itm.amount).reduce((acc, nxt) => acc + nxt);\n  }\n }\n  addNewExpense(){\n    this.navCtrl.navigateRoot('newexpense');\n  }\n\n  async editExpense(id){\n    this.expense=this.expenseList.filter(a=>a.id==id)[0];\n    let navigationExtras : NavigationExtras ={\n          queryParams : {expense : this.expense}\n    };\n    console.log(\"selected expense\"+JSON.stringify(this.expense) );\n  this.navCtrl.navigateRoot('newexpense',navigationExtras);    \n  }\n\n  async filterExpense(): Promise<any> {\n    const loading = await this.loadingController.create({\n      cssClass: 'my-custom-class',\n      message: 'Please wait...',\n      duration: 300000,\n    });\n    \n    await loading.present();\n    this.getAllExpenses().then(data=>{\n      this.applyFilter().then(data=>{\n        this.getTotalExpense().then(data=>{\n          this.totalExpense=data;\n          loading.dismiss();\n          console.log('Loading dismissed!');\n        });\n      });\n    });\n      \n  }\n  async applyFilter(): Promise<any>{\n    var start = new Date(this.startDate);\n\n    var end = new Date(this.endDate);\n\n    if (this.startDate != null && this.startDate != undefined) {\n\n      start = new Date(start.getFullYear(), start.getMonth(), start.getDate());\n      start.setHours(0);\n      start.setMinutes(0);\n      start.setSeconds(0);\n    }\n    if (this.endDate != null && this.endDate != undefined) {\n      end = new Date(end.getFullYear(), end.getMonth(), end.getDate())\n      end.setHours(23);\n      end.setMinutes(23);\n      end.setSeconds(23);\n    }\n\n    if (this.startDate != null && this.startDate != undefined && (this.endDate == null || this.endDate == undefined)) {\n      this.filterExpenses = this.expenseList?.filter(inv =>  new Date(inv.date) >= start);\n    } else if (this.startDate != null && this.startDate != undefined && this.endDate != null && this.endDate != undefined) {\n      this.filterExpenses = this.expenseList?.filter(inv => {\n        var date = new Date(inv.date);\n        date.setHours(1);\n        date.setMinutes(1);\n        date.setSeconds(1);\n        return  date.getTime() >= start.getTime() && date.getTime() <= end.getTime();\n      });\n    } else if ((this.startDate == null || this.startDate == undefined) && this.endDate != null && this.endDate != undefined) {\n      this.filterExpenses = this.expenseList?.filter(inv => new Date(inv.date) <= end);\n    } \n    return this.filterExpenses;\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Expense</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button menu=\\\"mainmenu\\\"> \\n\\n        </ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-row>\\n    <ion-col size=\\\"4\\\" >\\n      <ion-item>\\n        <ion-datetime displayFormat=\\\"MMM DD YYYY\\\" [(ngModel)]=\\\"startDate\\\" placeholder=\\\"Start Date\\\"></ion-datetime>\\n      </ion-item>\\n    </ion-col>\\n  \\n    <ion-col size=\\\"4\\\">\\n      <ion-item>\\n        <ion-datetime displayFormat=\\\"MMM DD YYYY\\\" [(ngModel)]=\\\"endDate\\\" placeholder=\\\"End Date\\\"></ion-datetime>\\n      </ion-item>\\n    </ion-col>\\n    <ion-col  size=\\\"4\\\" style=\\\"text-align: right;\\\">\\n      <ion-button style=\\\"padding-right: 5%;float: right;\\\" (click)=\\\"filterExpense()\\\">\\n        <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-col>  \\n  </ion-row>\\n  \\n  <ion-list>\\n    <ion-list-header>\\n      <ion-col size=\\\"4\\\">Date</ion-col>\\n      <ion-col size=\\\"4\\\" style=\\\"text-align: center;\\\">Category</ion-col>\\n      <ion-col style=\\\"text-align: right;padding-right: 5%;\\\" size=\\\"4\\\">Amount</ion-col>\\n    </ion-list-header>\\n    <ion-item *ngFor= \\\"let exp of filterExpenses\\\" (click)=\\\"editExpense(exp.id)\\\">\\n      \\n        \\n        \\n          <ion-col size=\\\"4\\\">{{exp.date | date : short}}</ion-col>\\n          <ion-col size=\\\"4\\\" style=\\\"text-align: center;\\\">{{exp.category}}</ion-col>\\n          <ion-col style=\\\"text-align: right;\\\" size=\\\"4\\\">{{exp.amount}}</ion-col>\\n       \\n     \\n    </ion-item>\\n  </ion-list>    \\n\\n</ion-content>\\n<ion-content style=\\\"max-height: 10%;margin-top: 2%;\\\" slot=\\\"fixed\\\">\\n  <ion-badge style=\\\"float: right;margin-right: 1%;\\\" color=\\\"primary\\\">Total Expense : {{(totalExpense) | number : '1.2'}}</ion-badge>\\n</ion-content>\\n<ion-footer>\\n  \\n    \\n  <ion-row style=\\\"float:right\\\">\\n    <ion-col >\\n    <ion-button  color=\\\"primary\\\" (click)=\\\"addNewExpense()\\\">\\n      <ion-icon name=\\\"add-circle\\\"></ion-icon>\\n    </ion-button>\\n  </ion-col>\\n  </ion-row>\\n    \\n \\n\\n\\n</ion-footer>\";"]}