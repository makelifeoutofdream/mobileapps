{"version":3,"sources":["webpack:///src/app/settings/settings-routing.module.ts","webpack:///src/app/settings/settings.module.ts","webpack:///src/app/settings/settings.page.scss","webpack:///src/app/services/print.service.ts","webpack:///src/app/settings/settings.page.ts","webpack:///src/app/settings/settings.page.html"],"names":["routes","path","component","SettingsPageRoutingModule","imports","forChild","exports","SettingsPageModule","declarations","PrintService","btSerial","tostService","Promise","resolve","reject","window","DatecsPrinter","listBluetoothDevices","success","error","alert","connect","data","printText","list","macAddress","disconnect","connectToBluetoothPrinter","subscribe","_","write","then","reason","console","log","err","presentToast","clear","isConnected","providedIn","SettingsPage","navCtrl","print","toastService","dbService","ref","plt","file","user","bluetoothList","printerSizes","name","value","showProfileSegment","showTaxSegment","showPrinterSegment","showBackupSegment","userProfile","id","companyName","companyNameInArabic","addressLine1","addressLine1InArabic","addressLine2","addressLine2InArabic","vatNumber","crNumber","toEmail","ccEmail","vat","selectedPrinter","selectedPrinterSize","canEnableUnit","type","showHideSegment","listPrinter","getProfile","undefined","is","searchBluetoothPrinter","resp","paper","paperSize","event","target","checked","createOrUpdateProfile","evt","detail","isUnitPEnable","backup","copyData","createDir","externalDataDirectory","writeExistingFile","dataDirectory","JSON","stringify","selector","template"],"mappings":"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","file":"settings-settings-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","export default \".vat-check .check {\\n  margin: 0;\\n  margin-right: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NldHRpbmdzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLFNBQUE7RUFDQSxrQkFBQTtBQUFSIiwiZmlsZSI6InNldHRpbmdzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi52YXQtY2hlY2sge1xuICAgIC5jaGVjayB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgIH1cbn0iXX0= */\";","import { Injectable } from '@angular/core';\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial/ngx';\nimport { ToastserviceService } from './toastservice.service';\ndeclare let  window : any;\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrintService {\n  public selectedPrinter:any;\n  \n  DatecsPrinter: any;\n  \n  constructor(public btSerial : BluetoothSerial,public tostService:ToastserviceService) { }\n\n listDevices(){\n   return new Promise((resolve,reject)=>{\n    window.DatecsPrinter.listBluetoothDevices(\n      function(success){\n        resolve(success);\n      },\n      function(error){\n        alert(error);\n        reject(error);\n      }\n    )\n   });\n   \n   \n }\n\n connectPrinter(){\n  return new Promise((resolve,reject)=>{\n    window.DatecsPrinter.connect(\n      function(success){\n        resolve(success);\n      },\n      function(error){\n        alert(error);\n        reject(error);\n      }\n    )\n   });\n }\n\n print(data){\n\n  return new Promise((resolve,reject)=>{\n    window.DatecsPrinter.printText(data,'UTF-8',\n      function(success){\n        resolve(success);\n      },\n      function(error){\n        alert(error);\n        reject(error);\n      }\n    )\n   });\n\n }\n\n    \n  \n  searchBluetoothPrinter(){\n   return this.btSerial.list();\n   \n  }\n\n  connectToBluetoothPrinter(macAddress){\n    alert(\"Printer MacAddress\" + macAddress);\n    return this.btSerial.connect(macAddress);\n  }\n\n  disconnectBluetoothPrinter(){\n    return this.btSerial.disconnect();\n  }\n\n  sendToBluetoothPrinter(macAddress,data){\n    this.connectToBluetoothPrinter(macAddress).subscribe(_=>{\n      this.btSerial.write(data).then(_=>{\n        this.btSerial.disconnect()}).catch(reason=>{console.log(reason)})\n    },err=>console.log(this.tostService.presentToast(\"Printer Issue - bluetooth address - \"+macAddress+\"-err-\"+err)));\n  }\n\n  \n\n  printDataToPrinter(data){\n    return this.btSerial.write(data);\n  }\n\n  clearData() {\n    this.btSerial.clear();\n  }\n\n  isConnected() {\n    return this.btSerial.isConnected();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NavController, Platform } from '@ionic/angular';\nimport { profile } from 'console';\nimport { DbService } from '../services/db.service';\nimport { PrintService } from '../services/print.service';\nimport { Profile } from '../services/profile';\nimport { ToastserviceService } from '../services/toastservice.service';\nimport {ApplicationRef} from '@angular/core'\nimport { File } from '@ionic-native/file/ngx';\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  user : any={};\n  type : string;\n  bluetoothList:any=[];\n  isUnitPEnable: any;\n  printerSizes: any = [{\n    name: '58mm',\n    value: 368\n  }, {\n    name: '80mm',\n    value: 552\n  }];\n  paperSize: any;\n  \n  showProfileSegment : boolean=true;\n  showTaxSegment : Boolean=false;\n  showPrinterSegment : Boolean=false;\n  showBackupSegment : boolean=true;\n  private userProfile : Profile=  {id:null , companyName:\"\",companyNameInArabic:\"\", \n  addressLine1:\"\",addressLine1InArabic:\"\",addressLine2:\"\",addressLine2InArabic:\"\",vatNumber:\"\",\n  crNumber:\"\",toEmail:\"\",ccEmail:\"\",vat:null,\n      selectedPrinter:null,\n      selectedPrinterSize: null,\n      canEnableUnit: false\n    };\n  constructor(public navCtrl:NavController,private print:PrintService,private toastService:ToastserviceService,\n    private dbService:DbService,private ref: ApplicationRef,private plt:Platform,\n    private file: File) { \n    this.type=\"profile\";\n    this.userProfile={id:null , companyName:\"\",companyNameInArabic:\"\", \n    addressLine1:\"\",addressLine1InArabic:\"\",addressLine2:\"\",addressLine2InArabic:\"\",\n    vatNumber:\"\",crNumber:\"\",toEmail:\"\",ccEmail:\"\",vat:null,selectedPrinter:null,\n       selectedPrinterSize: null, canEnableUnit: false\n      };\n    this.user.userProfile=this.userProfile;\n  }\n\n  ngOnInit() {\n    this.type=\"profile\";\n    this.showHideSegment();\n    this.listPrinter();\n    \n    //this.userProfile={id:null , companyName:\"\",companyNameInArabic:\"\", \n   // addressLine1:\"\",addressLine1InArabic:\"\",addressLine2:\"\",addressLine2InArabic:\"\",vatNumber:\"\",crNumber:\"\",toEmail:\"\",ccEmail:\"\",vat:null,selectedPrinter:null};\n     // this.user.userProfile=this.userProfile;\n  }\n\n  \n\n  showHideSegment(){\n    if(this.type=='profile'){\n      this.showPrinterSegment=false;\n      this.showProfileSegment=true;\n      this.showTaxSegment=false;\n      this.showBackupSegment=false;\n    }else if(this.type=='tax'){\n      this.showPrinterSegment=false;\n      this.showProfileSegment=false;\n      this.showTaxSegment=true;\n      this.showBackupSegment=false;\n    }else if(this.type=='printer'){\n      this.showPrinterSegment=true;\n      this.showProfileSegment=false;\n      this.showTaxSegment=false;\n      this.showBackupSegment=false;\n    }else if(this.type=='backup'){\n      this.showPrinterSegment=false;\n      this.showProfileSegment=false;\n      this.showTaxSegment=false;\n      this.showBackupSegment=true;\n    }\n    //this.ref.tick();\n  }\n  ionViewWillEnter(){\n    \n    this.listPrinter();\n    this.type=\"profile\";\n    this.showHideSegment();\n    this.dbService.getProfile().then(data=>{\n      this.userProfile=data\n      this.user.userProfile=data;\n    }  );\n    if(this.userProfile==null || this.userProfile==undefined){\n      this.userProfile={id:null , companyName:\"\",companyNameInArabic:\"\", canEnableUnit: false, selectedPrinterSize: '',\n      addressLine1:\"\",addressLine1InArabic:\"\",addressLine2:\"\",addressLine2InArabic:\"\",vatNumber:\"\",crNumber:\"\",toEmail:\"\",ccEmail:\"\",vat:null,selectedPrinter:null};\n      this.user.userProfile=this.userProfile;\n    }\n    console.log(\"profile\"+this.user.userProfile);\n  }\n\n  listPrinter(){\n    if(this.plt.is('cordova')){\n   this.print.searchBluetoothPrinter().then(resp=>{\n      this.bluetoothList=resp;\n      \n    });\n    /*this.print.listDevices().then(res=>{\n      this.bluetoothList=res;\n    })*/\n  }\n  \n\n  }\n  \n  selectPrinter(macAddress:any){\n    this.user.userProfile.selectedPrinter=macAddress;\n    \n  }\n\n  setPaperSize(paper) {\n    this.paperSize  = paper;\n    this.user.userProfile.selectedPrinterSize = paper;\n  }\n\n  enableUnitP(event) {\n      this.user.userProfile.canEnableUnit = event.target.checked;\n  }\n\n  updateProfile(){\n    console.log(\"profile printer\"+this.user.userProfile.selectedPrinter);\n    this.dbService.createOrUpdateProfile(this.user.userProfile).then(data=>{\n        if(data==null || data==undefined ){\n          this.toastService.presentToast(\"Failed to update settings\");  \n        }else{\n          this.user.userProfile=data;\n          this.toastService.presentToast(\"Settings updated successfully\");\n        }\n    }).catch(reason=>{\n      this.toastService.presentToast(\"Failed to update settings\");\n    })\n  }\n  \n\n  segmentChanged(evt:any){\n    if(evt.detail.value=='profile'){\n      this.type=\"profile\";\n    }else if(evt.detail.value=='tax'){\n      this.type=\"tax\";\n    }else if(evt.detail.value=='printer'){\n      this.type=\"printer\";\n    }\n\n    this.dbService.getProfile().then(data=> {\n      this.userProfile=data;\n      this.paperSize = this.userProfile.selectedPrinterSize;\n      this.isUnitPEnable = this.userProfile.canEnableUnit;\n      });\n\n    if(this.userProfile==null || this.userProfile==undefined){\n      this.userProfile={id:null , companyName:\"\",companyNameInArabic:\"\", canEnableUnit: false, selectedPrinterSize: '',\n      addressLine1:\"\",addressLine1InArabic:\"\",addressLine2:\"\",addressLine2InArabic:\"\",vatNumber:\"\",crNumber:\"\",toEmail:\"\",ccEmail:\"\",vat:null,selectedPrinter:null};\n      this.user.userProfile=this.userProfile;\n     \n    }\n    this.showHideSegment();\n  }\n\n  savefile(){\n    try{\n      \n    let backup:Blob;\n    this.dbService.copyData().then(data=>{\n      \n      backup=data;\n      this.file.createDir(this.file.externalDataDirectory, 'backup',true).then(data => {\n      \n        this.file.writeExistingFile(this.file.externalDataDirectory+'backup','easyinvoice.json',backup).then(data=>{\n          alert('Backup created inside'+this.file.dataDirectory+'backup');\n        })\n      }).catch(err =>\n        alert(\"failed to create \"+JSON.stringify(err) ));\n        \n    }\n    )\n    \n    }catch(err){\n      alert(err);\n    }\n    \n    \n  } \n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Settings</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button menu=\\\"mainmenu\\\"> \\n\\n        </ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-segment color=\\\"secondary\\\" (ionChange)=\\\"segmentChanged($event)\\\" [(ngModel)]=\\\"type\\\" scrollable > \\n    <ion-segment-button checked value=\\\"profile\\\" SwipedTabs id=\\\"profile\\\">\\n      <ion-label>Profile</ion-label>\\n      <ion-icon name=\\\"person-circle\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"tax\\\" id=\\\"tax\\\">\\n      <ion-label>Tax</ion-label>\\n       <ion-icon name=\\\"clipboard\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"printer\\\" id=\\\"printer\\\">\\n      <ion-label>Printer</ion-label>\\n      <ion-icon name=\\\"print\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"config\\\" id=\\\"config\\\">\\n      <ion-label>Configuration</ion-label>\\n      <ion-icon name=\\\"construct-outline\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button checked value=\\\"backup\\\">\\n      <ion-label>BackUp</ion-label>\\n      <ion-icon name=\\\"server\\\"></ion-icon>\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n\\n  <div [ngSwitch]=\\\"type\\\">\\n    <div *ngSwitchCase=\\\"'profile'\\\"> \\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"Company Name\\\" [(ngModel)]=\\\"user.userProfile.companyName\\\"></ion-textarea>\\n            </ion-item>\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"اسم الشركة\\\" [(ngModel)]=\\\"user.userProfile.companyNameInArabic\\\"></ion-textarea>\\n            </ion-item>\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"Address Line1\\\" [(ngModel)]=\\\"user.userProfile.addressLine1\\\"></ion-textarea>\\n            </ion-item>\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"العنوان السطر 1\\\" [(ngModel)]=\\\"user.userProfile.addressLine1inArabic\\\"></ion-textarea>\\n            </ion-item>\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"addressLine2\\\" [(ngModel)]=\\\"user.userProfile.addressLine2\\\"></ion-textarea>\\n            </ion-item>\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"سطر العنوان 2\\\" [(ngModel)]=\\\"user.userProfile.addressLine2InArabic\\\"></ion-textarea>\\n            </ion-item>\\n            \\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"Email to send\\\" [(ngModel)]=\\\"user.userProfile.toEmail\\\"></ion-textarea>\\n          </ion-item>\\n        \\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"CC Emails\\\" [(ngModel)]=\\\"user.userProfile.ccEmail\\\"></ion-textarea>\\n          </ion-item>\\n        \\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-row style=\\\"float:right\\\">\\n        <ion-col >\\n        <ion-button  color=\\\"primary\\\" (click)=\\\"updateProfile()\\\">\\n          <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      </ion-row>\\n      \\n    </div>\\n    <div *ngSwitchCase=\\\"'tax'\\\"> \\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-input type=\\\"number\\\" placeholder=\\\"Vat(%)\\\" [(ngModel)]=\\\"user.userProfile.vat\\\"></ion-input>\\n          </ion-item>\\n          <ion-item style=\\\"width: 100%\\\"> \\n            <ion-textarea  placeholder=\\\"VAT Number\\\" [(ngModel)]=\\\"user.userProfile.vatNumber\\\"></ion-textarea>\\n          </ion-item>\\n          <ion-item style=\\\"width: 100%\\\"> \\n            <ion-textarea  placeholder=\\\"CR Number\\\" [(ngModel)]=\\\"user.userProfile.crNumber\\\"></ion-textarea>\\n          </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-row style=\\\"float:right\\\">\\n        <ion-col >\\n        <ion-button  color=\\\"primary\\\" (click)=\\\"updateProfile()\\\">\\n          <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      </ion-row>\\n      \\n    </div>\\n    <div *ngSwitchCase=\\\"'printer'\\\">\\n      <ion-list>\\n        <ion-item *ngFor=\\\"let item of bluetoothList\\\" (click)=\\\"selectPrinter(item.address)\\\">\\n          {{item.name}} {{item.address}}\\n        </ion-item>\\n      </ion-list>\\n      <ion-item *ngIf=\\\"bluetoothList!=null && bluetoothList!=undefined\\\">\\n        Selected Printer: {{user.userProfile.selectedPrinter}} \\n      </ion-item>\\n      <ion-item *ngIf=\\\"bluetoothList==null || bluetoothList==undefined\\\">\\n        No Printer Connected..\\n      </ion-item>\\n      <ion-item class=\\\"full-width m-0 printer-dropdown\\\">\\n        <ion-label>Printer Size</ion-label>\\n        <ion-select [(ngModel)]=\\\"paperSize\\\" (ionChange)='setPaperSize(paperSize)' placeholder=\\\"Select printer size\\\">\\n         <ion-select-option  *ngFor=\\\"let size of printerSizes\\\" [value]=\\\"size.value\\\"> {{size.name}}</ion-select-option>\\n       </ion-select>\\n     </ion-item>\\n      <ion-row style=\\\"float:right\\\">\\n        <ion-col >\\n        <ion-button  color=\\\"primary\\\" (click)=\\\"updateProfile()\\\">\\n          <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      </ion-row>\\n    </div>\\n    <div *ngSwitchCase=\\\"'config'\\\">\\n      <ion-item class=\\\"vat-check\\\" no-lines lines=\\\"none\\\">\\n        <ion-label> Enable Unit Price</ion-label>\\n        <ion-checkbox class=\\\"check\\\" slot=\\\"start\\\" [(ngModel)]=\\\"isUnitPEnable\\\" (ionChange)=\\\"enableUnitP($event)\\\" ></ion-checkbox>\\n      </ion-item>\\n      <ion-row style=\\\"float:right\\\">\\n        <ion-col >\\n        <ion-button  color=\\\"primary\\\" (click)=\\\"updateProfile()\\\">\\n          <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      </ion-row>\\n    </div>\\n    <div *ngSwitchCase=\\\"'backup'\\\">\\n     \\n        <div style=\\\"margin-top: 22%;\\\"> \\n          <ion-button expand=\\\"block\\\" (click)=\\\"savefile()\\\">\\n            BackUp To Local Storage\\n          </ion-button>\\n        </div>\\n     \\n      \\n    </div>\\n  </div>\\n</ion-content>\\n\";"]}