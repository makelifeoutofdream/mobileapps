{"version":3,"sources":["webpack:///src/app/client/client.page.ts","webpack:///src/app/client/client.page.html","webpack:///src/app/client/client.module.ts","webpack:///src/app/client/client-routing.module.ts","webpack:///src/app/client/client.page.scss"],"names":["ClientPage","navCtrl","dbService","tostService","alertController","console","log","customers","navigateRoot","getAllCustomers","then","data","reason","presentToast","name","find","cus","getSelectedCustomer","customer","getAllInventories","inventoryList","itemList","undefined","Array","setItemsToCustomer","inv","it","id","push","index","findIndex","i","description","purchasePrice","populateCustomerItems","navigationExtras","queryParams","deleteCustomer","create","header","message","buttons","text","role","cssClass","handler","blah","alert","present","selector","template","ClientPageModule","imports","declarations","routes","path","component","ClientPageRoutingModule","forChild","exports"],"mappings":"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","file":"client-client-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NavigationExtras } from '@angular/router';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { Customer } from '../services/customer';\nimport { DbService } from '../services/db.service';\nimport { Inventory } from '../services/inventory';\nimport { ToastserviceService } from '../services/toastservice.service';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.page.html',\n  styleUrls: ['./client.page.scss'],\n})\nexport class ClientPage implements OnInit {\n\n  private customers : Customer[];\n  private customer : Customer;\n  private inventoryList : Inventory [];\n  constructor(public navCtrl:NavController,public dbService:DbService,\n    public tostService : ToastserviceService,public alertController: AlertController) { }\n\n  ngOnInit() {\n    console.log(\"init called\");\n    this.customers=[];\n  }\n\n  addNewClient(){\n    \n    this.navCtrl.navigateRoot('newclient');\n  }\n\n  ionViewWillEnter(){\n    this.dbService.getAllCustomers().then(data=>{\n      this.customers=data;\n    }).catch(reason=>{\n      console.log(reason);\n      this.tostService.presentToast(\"Failed to fetch the customers\"); \n    })\n  }\n\n  async getSelectedCustomer(name) : Promise<Customer>{\n    return this.customers.find(cus=>cus.name==name);\n  }\n  async populateCustomerItems (name): Promise<Customer>{\n    this.customer=await this.getSelectedCustomer(name);\n    this.inventoryList=await this.dbService.getAllInventories();\n    if(this.customer.itemList==null || this.customer.itemList==undefined){\n      this.customer.itemList=new Array();\n    }\n    this.customer=await this.setItemsToCustomer();\n    return this.customer;\n  }\n\n  async setItemsToCustomer() : Promise<Customer>{\n    for(let inv of this.inventoryList){\n     \n        if(this.customer.itemList.find(it=>it.id==inv.id)==null || this.customer.itemList.find(it=>it.id==inv.id)==null){\n          this.customer.itemList.push(inv);\n        }else{\n          var index = this.customer.itemList.findIndex(i => i.id == inv.id);\n          this.customer.itemList[index].name=inv.name;\n          this.customer.itemList[index].description=inv.description;\n          this.customer.itemList[index].purchasePrice=inv.purchasePrice;\n        }\n    }\n    return this.customer;\n  }\n  async editCustomer(name){\n    this.customer=await this.populateCustomerItems(name);\n    let navigationExtras : NavigationExtras ={\n          queryParams : {customer : this.customer}\n    };\n    console.log(\"selected customer\"+this.customer);\n  this.navCtrl.navigateRoot('editclient',navigationExtras);    \n  }\ndeleteCustomer(cus : Customer){\n  \n    this.dbService.deleteCustomer(cus).then(data=>{\n      this.tostService.presentToast('Customer removed successfully');\n      this.dbService.getAllCustomers().then(data=>{\n        this.customers=data;\n      })\n  });\n\n}\nasync presentDeleteAlertConfirm(cus : Customer) {\n  const alert = await this.alertController.create({\n   // cssClass: 'my-custom-class',\n    header: 'Confirm!',\n    message: '<strong>Are you sure to delete this customer?</strong>!!!',\n    buttons: [\n      {\n        text: 'No',\n        role: 'cancel',\n        cssClass: 'secondary',\n        handler: (blah) => {\n          console.log('Confirm Cancel');\n        }\n      }, {\n        text: 'Yes',\n        handler: () => {\n          this.deleteCustomer(cus);\n        }\n      }\n    ]\n  });\n\n  await alert.present();\n}\n\n}\n\n\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Customer</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button menu=\\\"mainmenu\\\"> \\n\\n        </ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item *ngFor= \\\"let cus of customers\\\">\\n      <ion-label>{{cus.name}}</ion-label>\\n      <ion-button color=\\\"secondary\\\" (click)=\\\"editCustomer(cus.name)\\\">Edit</ion-button>\\n      <ion-button (click)=\\\"presentDeleteAlertConfirm(cus)\\\">\\n        <ion-icon name=\\\"trash-bin\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n  </ion-list>    \\n  \\n</ion-content>\\n<ion-footer>\\n  \\n    \\n      <ion-row style=\\\"float:right\\\">\\n        <ion-col >\\n        <ion-button  color=\\\"primary\\\" (click)=\\\"addNewClient()\\\">\\n          <ion-icon name=\\\"add-circle\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      </ion-row>\\n        \\n    \\n  \\n  \\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ClientPageRoutingModule } from './client-routing.module';\n\nimport { ClientPage } from './client.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ClientPageRoutingModule\n  ],\n  declarations: [ClientPage]\n})\nexport class ClientPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ClientPage } from './client.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClientPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbGllbnQucGFnZS5zY3NzIn0= */\";"]}