{"version":3,"sources":["webpack:///src/app/settings/settings-routing.module.ts","webpack:///src/app/settings/settings.module.ts","webpack:///src/app/settings/settings.page.scss","webpack:///src/app/services/print.service.ts","webpack:///src/app/settings/settings.page.ts","webpack:///src/app/settings/settings.page.html"],"names":["routes","path","component","SettingsPageRoutingModule","imports","forChild","exports","SettingsPageModule","declarations","PrintService","btSerial","tostService","Promise","resolve","reject","window","DatecsPrinter","listBluetoothDevices","success","error","alert","connect","data","printText","macAddress","devices","address","printSomeTestText","JSON","stringify","list","disconnect","connectToBluetoothPrinter","subscribe","_","write","then","reason","console","log","err","presentToast","providedIn","SettingsPage","navCtrl","print","toastService","dbService","ref","plt","file","user","bluetoothList","showProfileSegment","showTaxSegment","showPrinterSegment","showBackupSegment","userProfile","id","companyName","companyNameInArabic","addressLine1","addressLine1InArabic","addressLine2","addressLine2InArabic","vatNumber","crNumber","toEmail","ccEmail","vat","selectedPrinter","type","showHideSegment","listPrinter","getProfile","undefined","is","searchBluetoothPrinter","resp","createOrUpdateProfile","evt","detail","value","backup","copyData","createDir","externalDataDirectory","writeExistingFile","dataDirectory","selector","template"],"mappings":"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","file":"settings-settings-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZXR0aW5ncy5wYWdlLnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial/ngx';\nimport { ToastserviceService } from './toastservice.service';\ndeclare let  window : any;\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrintService {\n  public selectedPrinter:any;\n  \n  DatecsPrinter: any;\n  \n  constructor(public btSerial : BluetoothSerial,public tostService:ToastserviceService) { }\n\n listDevices(){\n   return new Promise((resolve,reject)=>{\n    window.DatecsPrinter.listBluetoothDevices(\n      function(success){\n        resolve(success);\n      },\n      function(error){\n        alert(error);\n        reject(error);\n      }\n    )\n   });\n   \n   \n }\n\n connectPrinter(){\n  return new Promise((resolve,reject)=>{\n    window.DatecsPrinter.connect(\n      function(success){\n        resolve(success);\n      },\n      function(error){\n        alert(error);\n        reject(error);\n      }\n    )\n   });\n }\n\n print(data){\n\n  return new Promise((resolve,reject)=>{\n    window.DatecsPrinter.printText(data,'UTF-8',\n      function(success){\n        resolve(success);\n      },\n      function(error){\n        alert(error);\n        reject(error);\n      }\n    )\n   });\n\n }\n\n  printData(macAddress,data){\n  \n    window.DatecsPrinter.listBluetoothDevices(\n      function (devices) {\n        window.DatecsPrinter.connect(devices[0].address, \n          function() {\n            printSomeTestText();\n          },\n          function(error) {\n            alert(JSON.stringify(error));\n          }\n        );\n      },\n      function (error) {\n        alert(JSON.stringify(error));\n      }\n    );\n    \n    function printSomeTestText() {\n      window.DatecsPrinter.printText(\"Print Test!\", 'ISO-8859-1', \n        function() {\n          alert('success');\n        }\n      );\n    }\n    \n\n  }\n\n  searchBluetoothPrinter(){\n   return this.btSerial.list();\n   \n  }\n\n  connectToBluetoothPrinter(macAddress){\n    alert(\"Printer MacAddress\" + macAddress);\n    return this.btSerial.connect(macAddress);\n  }\n\n  disconnectBluetoothPrinter(){\n    return this.btSerial.disconnect();\n  }\n\n  sendToBluetoothPrinter(macAddress,data){\n    this.connectToBluetoothPrinter(macAddress).subscribe(_=>{\n      this.btSerial.write(data).then(_=>{\n        this.btSerial.disconnect()}).catch(reason=>{console.log(reason)})\n    },err=>console.log(this.tostService.presentToast(\"Printer Issue - bluetooth address - \"+macAddress+\"-err-\"+err)));\n  }\n\n  \n\n  printDataToPrinter(data){\n    return this.btSerial.write(data);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NavController, Platform } from '@ionic/angular';\nimport { profile } from 'console';\nimport { DbService } from '../services/db.service';\nimport { PrintService } from '../services/print.service';\nimport { Profile } from '../services/profile';\nimport { ToastserviceService } from '../services/toastservice.service';\nimport {ApplicationRef} from '@angular/core'\nimport { File } from '@ionic-native/file/ngx';\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  user : any={};\n  type : string;\n  bluetoothList:any=[];\n  \n  showProfileSegment : boolean=true;\n  showTaxSegment : Boolean=false;\n  showPrinterSegment : Boolean=false;\n  showBackupSegment : boolean=true;\n  private userProfile : Profile=  {id:null , companyName:\"\",companyNameInArabic:\"\", \n  addressLine1:\"\",addressLine1InArabic:\"\",addressLine2:\"\",addressLine2InArabic:\"\",vatNumber:\"\",crNumber:\"\",toEmail:\"\",ccEmail:\"\",vat:null,selectedPrinter:null};\n  constructor(public navCtrl:NavController,private print:PrintService,private toastService:ToastserviceService,\n    private dbService:DbService,private ref: ApplicationRef,private plt:Platform,\n    private file: File) { \n    this.type=\"profile\";\n    this.userProfile={id:null , companyName:\"\",companyNameInArabic:\"\", \n    addressLine1:\"\",addressLine1InArabic:\"\",addressLine2:\"\",addressLine2InArabic:\"\",vatNumber:\"\",crNumber:\"\",toEmail:\"\",ccEmail:\"\",vat:null,selectedPrinter:null};\n    this.user.userProfile=this.userProfile;\n  }\n\n  ngOnInit() {\n    this.type=\"profile\";\n    this.showHideSegment();\n    this.listPrinter();\n    \n    //this.userProfile={id:null , companyName:\"\",companyNameInArabic:\"\", \n   // addressLine1:\"\",addressLine1InArabic:\"\",addressLine2:\"\",addressLine2InArabic:\"\",vatNumber:\"\",crNumber:\"\",toEmail:\"\",ccEmail:\"\",vat:null,selectedPrinter:null};\n     // this.user.userProfile=this.userProfile;\n  }\n\n  \n\n  showHideSegment(){\n    if(this.type=='profile'){\n      this.showPrinterSegment=false;\n      this.showProfileSegment=true;\n      this.showTaxSegment=false;\n      this.showBackupSegment=false;\n    }else if(this.type=='tax'){\n      this.showPrinterSegment=false;\n      this.showProfileSegment=false;\n      this.showTaxSegment=true;\n      this.showBackupSegment=false;\n    }else if(this.type=='printer'){\n      this.showPrinterSegment=true;\n      this.showProfileSegment=false;\n      this.showTaxSegment=false;\n      this.showBackupSegment=false;\n    }else if(this.type=='backup'){\n      this.showPrinterSegment=false;\n      this.showProfileSegment=false;\n      this.showTaxSegment=false;\n      this.showBackupSegment=true;\n    }\n    //this.ref.tick();\n  }\n  ionViewWillEnter(){\n    \n    this.listPrinter();\n    this.type=\"profile\";\n    this.showHideSegment();\n    this.dbService.getProfile().then(data=>{\n      this.userProfile=data\n      this.user.userProfile=data;\n    }  );\n    if(this.userProfile==null || this.userProfile==undefined){\n      this.userProfile={id:null , companyName:\"\",companyNameInArabic:\"\", \n      addressLine1:\"\",addressLine1InArabic:\"\",addressLine2:\"\",addressLine2InArabic:\"\",vatNumber:\"\",crNumber:\"\",toEmail:\"\",ccEmail:\"\",vat:null,selectedPrinter:null};\n      this.user.userProfile=this.userProfile;\n    }\n    console.log(\"profile\"+this.user.userProfile);\n  }\n\n  listPrinter(){\n    if(this.plt.is('cordova')){\n   this.print.searchBluetoothPrinter().then(resp=>{\n      this.bluetoothList=resp;\n      \n    });\n    /*this.print.listDevices().then(res=>{\n      this.bluetoothList=res;\n    })*/\n  }\n  \n\n  }\n  \n  selectPrinter(macAddress:any){\n    this.user.userProfile.selectedPrinter=macAddress;\n    \n  }\n\n  updateProfile(){\n    console.log(\"profile printer\"+this.user.userProfile.selectedPrinter);\n    this.dbService.createOrUpdateProfile(this.user.userProfile).then(data=>{\n        if(data==null || data==undefined ){\n          this.toastService.presentToast(\"Failed to update settings\");  \n        }else{\n          this.user.userProfile=data;\n          this.toastService.presentToast(\"Settings updated successfully\");\n        }\n    }).catch(reason=>{\n      this.toastService.presentToast(\"Failed to update settings\");\n    })\n  }\n  \n\n  segmentChanged(evt:any){\n    if(evt.detail.value=='profile'){\n      this.type=\"profile\";\n    }else if(evt.detail.value=='tax'){\n      this.type=\"tax\";\n    }else if(evt.detail.value=='printer'){\n      this.type=\"printer\";\n    }\n\n    this.dbService.getProfile().then(data=>this.userProfile=data);\n    if(this.userProfile==null || this.userProfile==undefined){\n      this.userProfile={id:null , companyName:\"\",companyNameInArabic:\"\", \n      addressLine1:\"\",addressLine1InArabic:\"\",addressLine2:\"\",addressLine2InArabic:\"\",vatNumber:\"\",crNumber:\"\",toEmail:\"\",ccEmail:\"\",vat:null,selectedPrinter:null};\n      this.user.userProfile=this.userProfile;\n    }\n    this.showHideSegment();\n  }\n\n  savefile(){\n    try{\n      \n    let backup:Blob;\n    this.dbService.copyData().then(data=>{\n      \n      backup=data;\n      this.file.createDir(this.file.externalDataDirectory, 'backup',true).then(data => {\n      \n        this.file.writeExistingFile(this.file.externalDataDirectory+'backup','easyinvoice.json',backup).then(data=>{\n          alert('Backup created inside'+this.file.dataDirectory+'backup');\n        })\n      }).catch(err =>\n        alert(\"failed to create \"+JSON.stringify(err) ));\n        \n    }\n    )\n    \n    }catch(err){\n      alert(err);\n    }\n    \n    \n  } \n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Settings</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button menu=\\\"mainmenu\\\"> \\n\\n        </ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-segment color=\\\"secondary\\\" (ionChange)=\\\"segmentChanged($event)\\\" [(ngModel)]=\\\"type\\\"> \\n    <ion-segment-button checked value=\\\"profile\\\">\\n      <ion-label>Profile</ion-label>\\n      <ion-icon name=\\\"person-circle\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"tax\\\">\\n      <ion-label>Tax</ion-label>\\n       <ion-icon name=\\\"clipboard\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"printer\\\">\\n      <ion-label>Printer</ion-label>\\n      <ion-icon name=\\\"print\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button checked value=\\\"backup\\\">\\n      <ion-label>BackUp</ion-label>\\n      <ion-icon name=\\\"server\\\"></ion-icon>\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n\\n  <div [ngSwitch]=\\\"type\\\">\\n    <div *ngSwitchCase=\\\"'profile'\\\"> \\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"Company Name\\\" [(ngModel)]=\\\"user.userProfile.companyName\\\"></ion-textarea>\\n            </ion-item>\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"اسم الشركة\\\" [(ngModel)]=\\\"user.userProfile.companyNameInArabic\\\"></ion-textarea>\\n            </ion-item>\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"Address Line1\\\" [(ngModel)]=\\\"user.userProfile.addressLine1\\\"></ion-textarea>\\n            </ion-item>\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"العنوان السطر 1\\\" [(ngModel)]=\\\"user.userProfile.addressLine1inArabic\\\"></ion-textarea>\\n            </ion-item>\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"addressLine2\\\" [(ngModel)]=\\\"user.userProfile.addressLine2\\\"></ion-textarea>\\n            </ion-item>\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"سطر العنوان 2\\\" [(ngModel)]=\\\"user.userProfile.addressLine2InArabic\\\"></ion-textarea>\\n            </ion-item>\\n            \\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"Email to send\\\" [(ngModel)]=\\\"user.userProfile.toEmail\\\"></ion-textarea>\\n          </ion-item>\\n        \\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"CC Emails\\\" [(ngModel)]=\\\"user.userProfile.ccEmail\\\"></ion-textarea>\\n          </ion-item>\\n        \\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-row style=\\\"float:right\\\">\\n        <ion-col >\\n        <ion-button  color=\\\"primary\\\" (click)=\\\"updateProfile()\\\">\\n          <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      </ion-row>\\n      \\n    </div>\\n    <div *ngSwitchCase=\\\"'tax'\\\"> \\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-input type=\\\"number\\\" placeholder=\\\"Vat(%)\\\" [(ngModel)]=\\\"user.userProfile.vat\\\"></ion-input>\\n          </ion-item>\\n          <ion-item style=\\\"width: 100%\\\"> \\n            <ion-textarea  placeholder=\\\"VAT Number\\\" [(ngModel)]=\\\"user.userProfile.vatNumber\\\"></ion-textarea>\\n          </ion-item>\\n          <ion-item style=\\\"width: 100%\\\"> \\n            <ion-textarea  placeholder=\\\"CR Number\\\" [(ngModel)]=\\\"user.userProfile.crNumber\\\"></ion-textarea>\\n          </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-row style=\\\"float:right\\\">\\n        <ion-col >\\n        <ion-button  color=\\\"primary\\\" (click)=\\\"updateProfile()\\\">\\n          <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      </ion-row>\\n      \\n    </div>\\n    <div *ngSwitchCase=\\\"'printer'\\\">\\n      <ion-list>\\n        <ion-item *ngFor=\\\"let item of bluetoothList\\\" (click)=\\\"selectPrinter(item.address)\\\">\\n          {{item.name}} {{item.address}}\\n        </ion-item>\\n      </ion-list>\\n      <ion-item *ngIf=\\\"bluetoothList!=null && bluetoothList!=undefined\\\">\\n        Selected Printer: {{user.userProfile.selectedPrinter}} \\n      </ion-item>\\n      <ion-item *ngIf=\\\"bluetoothList==null || bluetoothList==undefined\\\">\\n        No Printer Connected..\\n      </ion-item>\\n      <ion-row style=\\\"float:right\\\">\\n        <ion-col >\\n        <ion-button  color=\\\"primary\\\" (click)=\\\"updateProfile()\\\">\\n          <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      </ion-row>\\n    </div>\\n    <div *ngSwitchCase=\\\"'backup'\\\">\\n     \\n        <div style=\\\"margin-top: 22%;\\\"> \\n          <ion-button expand=\\\"block\\\" (click)=\\\"savefile()\\\">\\n            BackUp To Local Storage\\n          </ion-button>\\n        </div>\\n     \\n      \\n    </div>\\n  </div>\\n</ion-content>\\n\";"]}