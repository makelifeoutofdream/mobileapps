{"version":3,"sources":["./src/app/inventory/inventory-routing.module.ts","./src/app/inventory/inventory.module.ts","./src/app/inventory/inventory.page.ts","./src/app/inventory/inventory.page.scss","./src/app/inventory/inventory.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEN;AAEjD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,0DAAa;KACzB;CACF,CAAC;IAMW,0BAA0B,SAA1B,0BAA0B;CAAG;AAA7B,0BAA0B;IAJtC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBE;AACM;AACF;AAEA;AAE2B;AAEvB;IAWpC,mBAAmB,SAAnB,mBAAmB;CAAG;AAAtB,mBAAmB;IAT/B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,iFAA0B;SAC3B;QACD,YAAY,EAAE,CAAC,0DAAa,CAAC;KAC9B,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBkB;AAEH;AACI;AAEoB;IAO1D,aAAa,SAAb,aAAa;IAExB,YAAmB,SAAqB,EAAQ,YAAkC,EACzE,OAAqB;QADX,cAAS,GAAT,SAAS,CAAY;QAAQ,iBAAY,GAAZ,YAAY,CAAsB;QACzE,YAAO,GAAP,OAAO,CAAc;IAAI,CAAC;IAEnC,QAAQ;IACR,CAAC;IAED,eAAe;QAEb,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;IAC5C,CAAC;IAEK,iBAAiB;;YACrB,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,IAAI,GAAE;gBAC5C,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC;YACxB,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAE;gBACf,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACtB,CAAC,CAAC;QACJ,CAAC;KAAA;IAED,gBAAgB;QACd,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,aAAa,CAAC,GAAG;QACf,IAAI,gBAAgB,GAAqB;YACvC,WAAW,EAAG,EAAC,SAAS,EAAG,GAAG,EAAC;SAChC,CAAC;QACJ,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAC,GAAG,CAAC,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,cAAc,EAAC,gBAAgB,CAAC,CAAC;IAC3D,CAAC;CACF;;YAzCQ,2DAAS;YAET,+EAAmB;YAHnB,yDAAa;;AAUT,aAAa;IALzB,wDAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,8EAAoC;;KAErC,CAAC;GACW,aAAa,CAgCzB;AAhCyB;;;;;;;;;;;;;ACZ1B,+DAAe,8CAA8C,uHAAuH,E;;;;;;;;;;;;ACApL,+DAAe,8jBAA8jB,UAAU,iCAAiC,cAAc,iCAAiC,eAAe,iCAAiC,mBAAmB,sXAAsX,E","file":"src_app_inventory_inventory_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InventoryPage } from './inventory.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InventoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InventoryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InventoryPageRoutingModule } from './inventory-routing.module';\n\nimport { InventoryPage } from './inventory.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InventoryPageRoutingModule\n  ],\n  declarations: [InventoryPage]\n})\nexport class InventoryPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { DbService } from '../services/db.service';\nimport { Inventory } from '../services/inventory';\nimport { ToastserviceService } from '../services/toastservice.service';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.page.html',\n  styleUrls: ['./inventory.page.scss'],\n})\nexport class InventoryPage implements OnInit {\n  private inventories : Inventory [];\n  constructor(public dbService : DbService,public toastService : ToastserviceService,\n    public navCtrl:NavController) { }\n\n  ngOnInit() {\n  }\n\n  addNewInventory(){\n    \n    this.navCtrl.navigateRoot('newinventory');\n  }\n\n  async getAllInventories() : Promise<any>{\n    this.dbService.getAllInventories().then(data=>{\n      this.inventories=data;\n    }).catch(reason=>{\n      console.log(reason);\n    })\n  }\n\n  ionViewWillEnter(){\n    this.getAllInventories();\n  }\n\n  editInventory(inv){\n    let navigationExtras : NavigationExtras ={\n      queryParams : {inventory : inv}\n    };\n  console.log(\"selected inventory\"+inv);\n  this.navCtrl.navigateRoot('newinventory',navigationExtras);    \n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbnZlbnRvcnkucGFnZS5zY3NzIn0= */\";","export default \"\\n\\n<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Inventory</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button menu=\\\"mainmenu\\\"> \\n\\n        </ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Name</ion-label>\\n      <ion-label>Quantity</ion-label>\\n      <ion-label>Unit Price</ion-label>\\n      <ion-label>Purchase Price</ion-label>\\n    </ion-list-header>\\n    <ion-item *ngFor= \\\"let inv of inventories\\\" (click)=\\\"editInventory(inv)\\\">\\n      <ion-label>{{inv.name}}</ion-label>\\n      <ion-label>{{inv.quantity}}</ion-label>\\n      <ion-label>{{inv.unitPrice}}</ion-label>\\n      <ion-label>{{inv.purchasePrice}}</ion-label>\\n    </ion-item>\\n  </ion-list>    \\n  \\n</ion-content>\\n<ion-footer>\\n  \\n    \\n      <ion-row style=\\\"float:right\\\">\\n        <ion-col >\\n        <ion-button  color=\\\"primary\\\" (click)=\\\"addNewInventory()\\\">\\n          <ion-icon name=\\\"add-circle\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      </ion-row>\\n        \\n    \\n  \\n  \\n</ion-footer>\";"],"sourceRoot":"webpack:///"}