{"version":3,"sources":["webpack:///src/app/settings/settings-routing.module.ts","webpack:///src/app/settings/settings.module.ts","webpack:///src/app/settings/settings.page.ts","webpack:///src/app/settings/settings.page.scss","webpack:///src/app/settings/settings.page.html"],"names":["routes","path","component","SettingsPage","SettingsPageRoutingModule","NgModule","imports","RouterModule","exports","SettingsPageModule","CommonModule","FormsModule","IonicModule","declarations","navCtrl","print","toastService","dbService","ref","plt","user","bluetoothList","showProfileSegment","showTaxSegment","showPrinterSegment","userProfile","id","toEmail","ccEmail","vat","type","showHideSegment","listPrinter","getProfile","then","data","undefined","console","log","is","searchBluetoothPrinter","resp","macAddress","selectedPrinter","createOrUpdateProfile","presentToast","reason","evt","detail","value","NavController","PrintService","ToastserviceService","DbService","ApplicationRef","Platform","Component","selector","template"],"mappings":"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","file":"src_app_settings_settings_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NavController, Platform } from '@ionic/angular';\nimport { profile } from 'console';\nimport { DbService } from '../services/db.service';\nimport { PrintService } from '../services/print.service';\nimport { Profile } from '../services/profile';\nimport { ToastserviceService } from '../services/toastservice.service';\nimport {ApplicationRef} from '@angular/core'\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  user : any={};\n  type : string;\n  bluetoothList:any=[];\n  selectedPrinter:any;\n  showProfileSegment : boolean=true;\n  showTaxSegment : Boolean=false;\n  showPrinterSegment : Boolean=false;\n  private userProfile : Profile={id:null,toEmail:\"\",ccEmail:\"\",vat:null};\n  constructor(public navCtrl:NavController,private print:PrintService,private toastService:ToastserviceService,\n    private dbService:DbService,private ref: ApplicationRef,private plt:Platform) { \n    this.type=\"profile\";\n    this.userProfile={id:null,toEmail:\"\",ccEmail:\"\",vat:null};\n    this.user.userProfile=this.userProfile;\n  }\n\n  ngOnInit() {\n    this.type=\"profile\";\n    this.showHideSegment();\n    this.listPrinter();\n    \n      this.userProfile={id:null,toEmail:\"\",ccEmail:\"\",vat:null};\n      this.user.userProfile=this.userProfile;\n  }\n\n  \n\n  showHideSegment(){\n    if(this.type=='profile'){\n      this.showPrinterSegment=false;\n      this.showProfileSegment=true;\n      this.showTaxSegment=false;\n    }else if(this.type=='tax'){\n      this.showPrinterSegment=false;\n      this.showProfileSegment=false;\n      this.showTaxSegment=true;\n    }else if(this.type=='printer'){\n      this.showPrinterSegment=true;\n      this.showProfileSegment=false;\n      this.showTaxSegment=false;\n    }\n    //this.ref.tick();\n  }\n  ionViewWillEnter(){\n    \n    this.listPrinter();\n    this.type=\"profile\";\n    this.showHideSegment();\n    this.dbService.getProfile().then(data=>this.userProfile=data);\n    if(this.userProfile==null || this.userProfile==undefined){\n      this.userProfile={id:null,toEmail:\"\",ccEmail:\"\",vat:null};\n      this.user.userProfile=this.userProfile;\n    }\n    console.log(\"profile\"+this.user.userProfile);\n  }\n\n  listPrinter(){\n    if(this.plt.is('cordova')){\n    this.print.searchBluetoothPrinter().then(resp=>{\n      this.bluetoothList=resp;\n      \n    });\n  }\n  }\n  \n  selectPrinter(macAddress:string){\n    this.print.selectedPrinter=macAddress;\n    this.selectedPrinter=this.print.selectedPrinter;\n  }\n\n  updateProfile(){\n    console.log(\"profile\"+this.user.userProfile);\n    this.dbService.createOrUpdateProfile(this.user.userProfile).then(data=>{\n      if(data==null || data==undefined){\n        this.toastService.presentToast(\"Failed to update settings\");  \n      }else{\n        this.toastService.presentToast(\"Settings updated successfully\");\n      }\n      \n    }).catch(reason=>{\n      this.toastService.presentToast(\"Failed to update settings\");\n    })\n  }\n  \n\n  segmentChanged(evt:any){\n    if(evt.detail.value=='profile'){\n      this.type=\"profile\";\n    }else if(evt.detail.value=='tax'){\n      this.type=\"tax\";\n    }else if(evt.detail.value=='printer'){\n      this.type=\"printer\";\n    }\n\n    this.dbService.getProfile().then(data=>this.userProfile=data);\n    if(this.userProfile==null || this.userProfile==undefined){\n      this.userProfile={id:null,toEmail:\"\",ccEmail:\"\",vat:null};\n      this.user.userProfile=this.userProfile;\n    }\n    this.showHideSegment();\n  }\n  updatePrinter(){\n   this.toastService.presentToast(\"Printer configured successfully\");\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZXR0aW5ncy5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Settings</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button menu=\\\"mainmenu\\\"> \\n\\n        </ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-segment color=\\\"secondary\\\" (ionChange)=\\\"segmentChanged($event)\\\" [(ngModel)]=\\\"type\\\"> \\n    <ion-segment-button checked value=\\\"profile\\\">\\n      <ion-label>Profile</ion-label>\\n      <ion-icon name=\\\"person-circle\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"tax\\\">\\n      <ion-label>Tax</ion-label>\\n       <ion-icon name=\\\"clipboard\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"printer\\\">\\n      <ion-label>Printer</ion-label>\\n      <ion-icon name=\\\"print\\\"></ion-icon>\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n\\n  <div [ngSwitch]=\\\"type\\\">\\n    <div *ngSwitchCase=\\\"'profile'\\\"> \\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"Email to send\\\" [(ngModel)]=\\\"user.toEmail\\\"></ion-textarea>\\n          </ion-item>\\n        \\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-textarea  placeholder=\\\"CC Emails\\\" [(ngModel)]=\\\"user.ccEmail\\\"></ion-textarea>\\n          </ion-item>\\n        \\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-row style=\\\"float:right\\\">\\n        <ion-col >\\n        <ion-button  color=\\\"primary\\\" (click)=\\\"updateProfile()\\\">\\n          <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      </ion-row>\\n      \\n    </div>\\n    <div *ngSwitchCase=\\\"'tax'\\\"> \\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item style=\\\"width: 100%\\\"> \\n              <ion-input type=\\\"number\\\" placeholder=\\\"Vat(%)\\\" [(ngModel)]=\\\"user.vat\\\"></ion-input>\\n          </ion-item>\\n        \\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-row style=\\\"float:right\\\">\\n        <ion-col >\\n        <ion-button  color=\\\"primary\\\" (click)=\\\"updateProfile()\\\">\\n          <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      </ion-row>\\n      \\n    </div>\\n    <div *ngSwitchCase=\\\"'printer'\\\">\\n      <ion-list>\\n        <ion-item *ngFor=\\\"let item of bluetoothList\\\" (click)=\\\"selectPrinter(item.id)\\\">\\n          {{item.name}} {{item.id}}\\n        </ion-item>\\n      </ion-list>\\n      <ion-item *ngIf=\\\"bluetoothList!=null && bluetoothList!=undefined\\\">\\n        Selected Printer: {{selectedPrinter}}\\n      </ion-item>\\n      <ion-item *ngIf=\\\"bluetoothList==null || bluetoothList==undefined\\\">\\n        No Printer Connected..\\n      </ion-item>\\n      <ion-row style=\\\"float:right\\\">\\n        <ion-col >\\n        <ion-button  color=\\\"primary\\\" (click)=\\\"updatePrinter()\\\">\\n          <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      </ion-row>\\n    </div>\\n  </div>\\n</ion-content>\\n\";"]}