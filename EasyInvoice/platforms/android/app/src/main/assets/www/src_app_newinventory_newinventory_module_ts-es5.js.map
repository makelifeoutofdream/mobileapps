{"version":3,"sources":["webpack:///src/app/newinventory/newinventory-routing.module.ts","webpack:///src/app/newinventory/newinventory.module.ts","webpack:///src/app/newinventory/newinventory.page.ts","webpack:///src/app/newinventory/newinventory.page.scss","webpack:///src/app/newinventory/newinventory.page.html"],"names":["routes","path","component","NewinventoryPage","NewinventoryPageRoutingModule","NgModule","imports","RouterModule","exports","NewinventoryPageModule","CommonModule","FormsModule","IonicModule","declarations","dbService","toastService","navCtrl","inventory","name","description","quantity","unitPrice","createOrUpdateInventory","then","data","console","log","reason","navigateRoot","DbService","ToastserviceService","NavController","Component","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,gDAAAC;AAFb,OADqB,CAAvB;;UAWaC,8BAA6B;AAAA;AAAA,O;;AAA7BA,oCAA6B,uDAJzC,+CAAAC,QAAA,EAAS;AACRC,eAAO,EAAE,CAAC,6CAAAC,YAAA,UAAsBP,MAAtB,CAAD,CADD;AAERQ,eAAO,EAAE,CAAC,6CAAAD,YAAD;AAFD,OAAT,CAIyC,GAA7BH,8BAA6B,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAK,uBAAsB;AAAA;AAAA,O;;AAAtBA,6BAAsB,uDATlC,+CAAAJ,QAAA,EAAS;AACRC,eAAO,EAAE,CACP,6CAAAI,YADO,EAEP,4CAAAC,WAFO,EAGP,4CAAAC,WAHO,EAIP,0DAAAR,6BAJO,CADD;AAORS,oBAAY,EAAE,CAAC,gDAAAV,gBAAD;AAPN,OAAT,CASkC,GAAtBM,uBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPAN,iBAAgB;AAE3B,kCAAmBW,SAAnB,EAAgDC,YAAhD,EACSC,OADT,EACgC;AAAA;;AADb,eAAAF,SAAA,GAAAA,SAAA;AAA6B,eAAAC,YAAA,GAAAA,YAAA;AACvC,eAAAC,OAAA,GAAAA,OAAA;AAA0B;;AAHR;AAAA;AAAA,iBAK3B,oBAAW;AACT,iBAAKC,SAAL,GAAe;AAACC,kBAAI,EAAG,EAAR;AAAWC,yBAAW,EAAC,EAAvB;AAA0BC,sBAAQ,EAAC,IAAnC;AAAwCC,uBAAS,EAAC;AAAlD,aAAf;AACD;AAP0B;AAAA;AAAA,iBASrB,2BAAe;;;;;;;;AACnB,2BAAKP,SAAL,CAAeQ,uBAAf,CAAuC,KAAKL,SAA5C,EAAuDM,IAAvD,CAA4D,UAAAC,IAAI,EAAE;AAChEC,+BAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,uBAFD,WAES,UAAAC,MAAM,EAAE;AACfF,+BAAO,CAACC,GAAR,CAAYC,MAAZ;AACD,uBAJD,aAIW,YAAI;AACb,6BAAI,CAACV,SAAL,GAAe;AAACC,8BAAI,EAAG,EAAR;AAAWC,qCAAW,EAAC,EAAvB;AAA0BC,kCAAQ,EAAC,IAAnC;AAAwCC,mCAAS,EAAC;AAAlD,yBAAf;;AACA,6BAAI,CAACL,OAAL,CAAaY,YAAb,CAA0B,WAA1B;AACD,uBAPD;;;;;;;;;AAQD;AAlB0B;;AAAA;AAAA,S;;;;gBAVpB,kDAAAC;;gBAEA,4DAAAC;;gBAHA,4CAAAC;;;;AAWI5B,uBAAgB,uDAL5B,+CAAA6B,SAAA,EAAU;AACTC,gBAAQ,EAAE,kBADD;AAETC,gBAAQ,EAAR,0EAFS;;AAAA,OAAV,CAK4B,GAAhB/B,iBAAgB,CAAhB;;;;;;;;;;;;;;;ACZb;;;AAAA,uCAAe,yKAAf;;;;;;;;;;;;;;;ACAA;;;AAAA,uCAAe,86CAAf","file":"src_app_newinventory_newinventory_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewinventoryPage } from './newinventory.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewinventoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewinventoryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewinventoryPageRoutingModule } from './newinventory-routing.module';\n\nimport { NewinventoryPage } from './newinventory.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NewinventoryPageRoutingModule\n  ],\n  declarations: [NewinventoryPage]\n})\nexport class NewinventoryPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { DbService } from '../services/db.service';\nimport { Inventory } from '../services/inventory';\nimport { ToastserviceService } from '../services/toastservice.service';\n\n\n@Component({\n  selector: 'app-newinventory',\n  templateUrl: './newinventory.page.html',\n  styleUrls: ['./newinventory.page.scss'],\n})\nexport class NewinventoryPage implements OnInit {\n  private inventory : Inventory;\n  constructor(public dbService : DbService,public toastService : ToastserviceService,\n    public navCtrl:NavController) { }\n\n  ngOnInit() {\n    this.inventory={name : \"\",description:\"\",quantity:null,unitPrice:null};\n  }\n\n  async addNewInventory():Promise<any>{\n    this.dbService.createOrUpdateInventory(this.inventory).then(data=>{\n      console.log(\"Item added successfully\");\n    }).catch(reason=>{\n      console.log(reason);\n    }).finally(()=>{\n      this.inventory={name : \"\",description:\"\",quantity:null,unitPrice:null};\n      this.navCtrl.navigateRoot('inventory');\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuZXdpbnZlbnRvcnkucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>New Inventory</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n<ion-row>\\n  <ion-col size=\\\"6\\\">\\n    <ion-item >\\n      <ion-label position=\\\"floating\\\">Name</ion-label>\\n      <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"inventory.name\\\" required></ion-input>\\n    </ion-item>\\n    </ion-col>\\n    <ion-col size=\\\"6\\\">\\n    <ion-item >\\n      <ion-label position=\\\"floating\\\">Description</ion-label>\\n      <ion-input name=\\\"location\\\" type=\\\"text\\\" [(ngModel)]=\\\"inventory.description\\\" required></ion-input>\\n    </ion-item> \\n   </ion-col>\\n  \\n  \\n</ion-row>\\n\\n<ion-row>\\n  <ion-col size=\\\"6\\\">\\n    <ion-item >\\n      <ion-label position=\\\"floating\\\">Quantity</ion-label>\\n      <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"inventory.quantity\\\" required></ion-input>\\n    </ion-item>\\n    </ion-col>\\n    <ion-col size=\\\"6\\\">\\n    <ion-item >\\n      <ion-label position=\\\"floating\\\">Unit Price</ion-label>\\n      <ion-input name=\\\"location\\\" type=\\\"text\\\" [(ngModel)]=\\\"inventory.unitPrice\\\" required></ion-input>\\n    </ion-item> \\n   </ion-col>\\n\\n</ion-row>\\n\\n</ion-grid>\\n<ion-row style=\\\"float:right\\\">\\n  <ion-col >\\n  <ion-button  color=\\\"primary\\\" (click)=\\\"addNewInventory()\\\">\\n    <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n   \\n    \\n  </ion-button>\\n</ion-col>\\n</ion-row>\\n\\n</ion-content>\\n<ion-footer>\\n  \\n    \\n    \\n\\n\\n\\n</ion-footer>\";"]}