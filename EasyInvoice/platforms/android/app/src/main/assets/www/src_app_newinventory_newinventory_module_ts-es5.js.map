{"version":3,"sources":["webpack:///src/app/newinventory/newinventory-routing.module.ts","webpack:///src/app/newinventory/newinventory.module.ts","webpack:///src/app/newinventory/newinventory.page.ts","webpack:///src/app/newinventory/newinventory.page.scss","webpack:///src/app/newinventory/newinventory.page.html"],"names":["routes","path","component","NewinventoryPage","NewinventoryPageRoutingModule","NgModule","imports","RouterModule","exports","NewinventoryPageModule","CommonModule","FormsModule","IonicModule","declarations","dbService","toastService","navCtrl","route","inventory","id","name","description","quantity","unitPrice","purchasePrice","createOrUpdateInventory","then","data","undefined","console","log","reason","navigateRoot","queryParams","subscribe","params","DbService","ToastserviceService","NavController","ActivatedRoute","Component","selector","template"],"mappings":"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","file":"src_app_newinventory_newinventory_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewinventoryPage } from './newinventory.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewinventoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewinventoryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewinventoryPageRoutingModule } from './newinventory-routing.module';\n\nimport { NewinventoryPage } from './newinventory.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NewinventoryPageRoutingModule\n  ],\n  declarations: [NewinventoryPage]\n})\nexport class NewinventoryPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { DbService } from '../services/db.service';\nimport { Inventory } from '../services/inventory';\nimport { ToastserviceService } from '../services/toastservice.service';\n\n\n@Component({\n  selector: 'app-newinventory',\n  templateUrl: './newinventory.page.html',\n  styleUrls: ['./newinventory.page.scss'],\n})\nexport class NewinventoryPage implements OnInit {\n  private inventory : Inventory;\n  constructor(public dbService : DbService,public toastService : ToastserviceService,\n    public navCtrl:NavController,private route : ActivatedRoute) { }\n\n  ngOnInit() {\n    this.inventory={id:null,name : \"\",description:\"\",quantity:null,unitPrice:null,purchasePrice:null};\n  }\n\n  async addNewInventory():Promise<any>{\n    this.dbService.createOrUpdateInventory(this.inventory).then(data=>{\n      if(this.inventory.id==null || this.inventory.id==undefined){\n        console.log(\"Item added successfully\");\n      }else{\n        console.log(\"Item updated successfully\");\n      }\n      \n    }).catch(reason=>{\n      console.log(reason);\n    }).finally(()=>{\n      this.inventory={id:null,name : \"\",description:\"\",quantity:null,unitPrice:null,purchasePrice:null};\n      this.navCtrl.navigateRoot('inventory');\n    });\n  }\n\n  ionViewWillEnter(){\n    \n    this.route.queryParams.subscribe(params=>{\n      if(params['inventory']==null || params['inventory']==undefined){\n        this.inventory={id : null,name:\"\",description:\"\",quantity:null,unitPrice:null,purchasePrice:null};\n      }else{\n        this.inventory=params['inventory'];\n      }\n      \n    })\n    console.log('selected inventory'+this.inventory.name);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuZXdpbnZlbnRvcnkucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>New Inventory</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button menu=\\\"mainmenu\\\"> \\n\\n        </ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-grid>\\n<ion-row>\\n  <ion-col size=\\\"3\\\">\\n    <ion-item >\\n      <ion-label position=\\\"floating\\\">Name</ion-label>\\n      <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"inventory.name\\\" required></ion-input>\\n    </ion-item>\\n    </ion-col>\\n    <ion-col size=\\\"4\\\">\\n    <ion-item >\\n      <ion-label position=\\\"floating\\\">Description</ion-label>\\n      <ion-input name=\\\"location\\\" type=\\\"text\\\" [(ngModel)]=\\\"inventory.description\\\" required></ion-input>\\n    </ion-item> \\n   </ion-col>\\n  \\n   <ion-col size=\\\"5\\\">\\n    <ion-item >\\n      <ion-label position=\\\"floating\\\">Quantity</ion-label>\\n      <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"inventory.quantity\\\" required></ion-input>\\n    </ion-item>\\n    </ion-col>\\n  \\n</ion-row>\\n\\n<ion-row>\\n    <ion-col size=\\\"6\\\">\\n    <ion-item >\\n      <ion-label position=\\\"floating\\\">Unit Price</ion-label>\\n      <ion-input name=\\\"location\\\" type=\\\"text\\\" [(ngModel)]=\\\"inventory.unitPrice\\\" required></ion-input>\\n    </ion-item> \\n   </ion-col>\\n   <ion-col size=\\\"6\\\">\\n    <ion-item >\\n      <ion-label position=\\\"floating\\\">Purchase Price</ion-label>\\n      <ion-input name=\\\"purchasePrice\\\" type=\\\"text\\\" [(ngModel)]=\\\"inventory.purchasePrice\\\" required></ion-input>\\n    </ion-item> \\n   </ion-col>\\n\\n</ion-row>\\n\\n</ion-grid>\\n<ion-row style=\\\"float:right\\\">\\n  <ion-col >\\n  <ion-button  color=\\\"primary\\\" (click)=\\\"addNewInventory()\\\">\\n    <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n   \\n    \\n  </ion-button>\\n</ion-col>\\n</ion-row>\\n\\n</ion-content>\\n<ion-footer>\\n  \\n    \\n    \\n\\n\\n\\n</ion-footer>\";"]}