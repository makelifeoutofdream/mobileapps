{"version":3,"sources":["webpack:///src/app/editclient/editclient-routing.module.ts","webpack:///src/app/editclient/editclient.module.ts","webpack:///src/app/editclient/editclient.page.ts","webpack:///src/app/editclient/editclient.page.scss","webpack:///src/app/editclient/editclient.page.html"],"names":["routes","path","component","EditclientPage","EditclientPageRoutingModule","NgModule","imports","RouterModule","exports","EditclientPageModule","CommonModule","FormsModule","IonicModule","declarations","dbService","toastService","navCtrl","route","queryParams","subscribe","params","customer","console","log","UpdateCustomer","then","data","presentToast","reason","DbService","ToastserviceService","NavController","ActivatedRoute","Component","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,8CAAAC;AAFb,OADqB,CAAvB;;UAWaC,4BAA2B;AAAA;AAAA,O;;AAA3BA,kCAA2B,uDAJvC,+CAAAC,QAAA,EAAS;AACRC,eAAO,EAAE,CAAC,6CAAAC,YAAA,UAAsBP,MAAtB,CAAD,CADD;AAERQ,eAAO,EAAE,CAAC,6CAAAD,YAAD;AAFD,OAAT,CAIuC,GAA3BH,4BAA2B,CAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAK,qBAAoB;AAAA;AAAA,O;;AAApBA,2BAAoB,uDAThC,+CAAAJ,QAAA,EAAS;AACRC,eAAO,EAAE,CACP,6CAAAI,YADO,EAEP,4CAAAC,WAFO,EAGP,4CAAAC,WAHO,EAIP,wDAAAR,2BAJO,CADD;AAORS,oBAAY,EAAE,CAAC,8CAAAV,cAAD;AAPN,OAAT,CASgC,GAApBM,qBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPAN,eAAc;AAGzB,gCAAmBW,SAAnB,EAAgDC,YAAhD,EACSC,OADT,EACyCC,KADzC,EACiE;AAAA;;AAD9C,eAAAH,SAAA,GAAAA,SAAA;AAA6B,eAAAC,YAAA,GAAAA,YAAA;AACvC,eAAAC,OAAA,GAAAA,OAAA;AAAgC,eAAAC,KAAA,GAAAA,KAAA;AAA2B;;AAJ3C;AAAA;AAAA,iBAMzB,oBAAW,CACV;AAPwB;AAAA;AAAA,iBAQzB,4BAAgB;AAAA;;AAEd,iBAAKA,KAAL,CAAWC,WAAX,CAAuBC,SAAvB,CAAiC,UAAAC,MAAM,EAAE;AACvC,mBAAI,CAACC,QAAL,GAAcD,MAAM,CAAC,UAAD,CAApB;AACD,aAFD;AAGAE,mBAAO,CAACC,GAAR,CAAY,sBAAoB,KAAKF,QAArC;AAMD;AAnBwB;AAAA;AAAA,iBAqBzB,wBAAY;AAAA;;AAEV,iBAAKP,SAAL,CAAeU,cAAf,CAA8B,KAAKH,QAAnC,EAA6CI,IAA7C,CAAkD,UAAAC,IAAI;AAAA,qBAAE,MAAI,CAACX,YAAL,CAAkBY,YAAlB,CAA+B,+BAA/B,CAAF;AAAA,aAAtD,WACO,UAAAC,MAAM,EAAE;AACb,oBAAI,CAACb,YAAL,CAAkBY,YAAlB,CAA+B,wBAA/B;;AACAL,qBAAO,CAACC,GAAR,CAAYK,MAAZ;AACD,aAJD;AAKD;AA5BwB;;AAAA;AAAA,S;;;;gBAVlB,kDAAAC;;gBACA,4DAAAC;;gBAFA,4CAAAC;;gBAGA,6CAAAC;;;;AAQI7B,qBAAc,uDAL1B,+CAAA8B,SAAA,EAAU;AACTC,gBAAQ,EAAE,gBADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAK0B,GAAdhC,eAAc,CAAd;;;;;;;;;;;;;;;ACZb;;;AAAA,uCAAe,qKAAf;;;;;;;;;;;;;;;ACAA;;;AAAA,uCAAe,quEAAf","file":"src_app_editclient_editclient_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditclientPage } from './editclient.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditclientPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditclientPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditclientPageRoutingModule } from './editclient-routing.module';\n\nimport { EditclientPage } from './editclient.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditclientPageRoutingModule\n  ],\n  declarations: [EditclientPage]\n})\nexport class EditclientPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { DbService } from '../services/db.service';\nimport { ToastserviceService } from '../services/toastservice.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Customer } from '../services/customer';\nimport { DataService } from '../data.service';\n@Component({\n  selector: 'app-editclient',\n  templateUrl: './editclient.page.html',\n  styleUrls: ['./editclient.page.scss'],\n})\nexport class EditclientPage implements OnInit {\n  customer : Customer ;\n  cusList : Customer[];\n  constructor(public dbService : DbService,public toastService : ToastserviceService,\n    public navCtrl:NavController , private route : ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n  ionViewWillEnter(){\n    \n    this.route.queryParams.subscribe(params=>{\n      this.customer=params['customer'];\n    })\n    console.log('selected customer'+this.customer);\n    \n    \n    \n\n\n  }\n\n  updateClient(){\n    \n    this.dbService.UpdateCustomer(this.customer).then(data=>this.toastService.presentToast(\"Customer updated successfully\"))\n    .catch(reason=>{\n      this.toastService.presentToast(\"Customer update failed\");\n      console.log(reason);\n    })\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0Y2xpZW50LnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Edit Client</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"6\\\">\\n        <ion-item >\\n          <ion-label position=\\\"floating\\\">Name</ion-label>\\n          <ion-input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.name\\\" required></ion-input>\\n        </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n        <ion-item >\\n          <ion-label position=\\\"floating\\\">Location</ion-label>\\n          <ion-input name=\\\"location\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.location\\\" required></ion-input>\\n        </ion-item> \\n       </ion-col>\\n      \\n      \\n    </ion-row>\\n    \\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-item >\\n          <ion-label position=\\\"floating\\\">Contact Person Name</ion-label>\\n          <ion-input name=\\\"contactpersonname\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.contactPersonName\\\" required></ion-input>\\n        </ion-item>\\n      </ion-col>\\n    </ion-row>\\n    \\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-item >\\n          <ion-label position=\\\"floating\\\">Vat</ion-label>\\n          <ion-input name=\\\"val\\\" type=\\\"text\\\" [(ngModel)]=\\\"customer.val\\\" required></ion-input>\\n        </ion-item>\\n        </ion-col>\\n        \\n    </ion-row>\\n  </ion-grid>\\n  <ion-item-divider></ion-item-divider>\\n  <ion-list>\\n    <ion-item  *ngFor= \\\"let item of customer.itemList\\\">\\n      <ion-grid>\\n        <ion-row style=\\\"color : white ; background-color: blueviolet;\\\">\\n          <ion-col size=6>Item</ion-col>\\n          <ion-col size=2>Price</ion-col>\\n        </ion-row>\\n      <ion-row style=\\\"background-color: aliceblue;\\\">\\n        <ion-col size=6>\\n          <ion-input [(ngModel)]=\\\"item.name\\\" disabled></ion-input>\\n        </ion-col>\\n        <ion-col size=\\\"2\\\">\\n          <ion-input [(ngModel)]=\\\"item.unitPrice\\\"></ion-input>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n    </ion-item>\\n  </ion-list>\\n  \\n</ion-content>\\n<ion-footer>\\n  <ion-row style=\\\"float:right\\\">\\n    <ion-col>\\n      <ion-button color=\\\"Primary\\\" (click)=\\\"updateClient()\\\">\\n        <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-footer>\";"]}