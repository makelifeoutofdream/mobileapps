{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-4927a4c1.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./src/app/services/db.service.ts","./src/app/services/print.service.ts","./src/app/services/toastservice.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAqD;AACkE;AACnE;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAa;AACtB;AACA;AACA;AACA,mEAAmE,kDAAoB;AACvF,kEAAkE,kDAAsB;AACxF;AACA;AACA,MAAM,sDAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;;;;;;AC/DoB;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uDAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;;;;;;;;ACjCtD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;;;;ACzGpI;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;;;;;;;AC7GzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC,MAAM,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;;;;;;;;;;ACrC1C;AAIO;AAEW;AACZ;IAOpC,SAAS,SAAT,SAAS;IAapB,YACU,UAAsB,EACtB,YAAkC,EAClC,OAAiB;QAFjB,eAAU,GAAV,UAAU,CAAY;QACtB,iBAAY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","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-f49d994d.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","\nimport { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { User } from './user';\nimport {Customer} from './customer';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { ToastserviceService } from './toastservice.service';\nimport { Storage } from '@ionic/storage-angular';\nimport { Inventory } from './inventory';\nimport { Invoice } from './invoice';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DbService {\n  private usersKey=\"users\";\n  private customersKey=\"customers\";\n  private inventoryKey=\"inventories\";\n  private invoiceKey=\"invoices\";\n  private invoiceNumberKey=\"invoiceNumber\";\n  private invoices : Invoice[] ;\n  private inventory : Inventory;\n  private inventories : Inventory[];\n  private customer : Customer;\n  private customers : Customer[];\n  private user : User;\n  private  users:User[]\n  constructor(\n    private httpClient: HttpClient,\n    private toastService : ToastserviceService,\n    private storage : Storage\n  ) {\n   this.init();\n  }\n\n  async init(){\n    const storageVar=await this.storage.create();\n    this.storage=storageVar;\n  }\n  \n  async signup(user : User) : Promise<any> {\n    try{\n      \n      let value=await this.storage.get(this.usersKey)\n      this.users=JSON.parse(value);\n      if(this.users==undefined || this.users==null){\n        this.users=[];\n      }\n      this.users.push(user);\n      const result =await this.storage.set(this.usersKey,JSON.stringify(this.users));\n      console.log('user signed up successfully'+user);\n      return true;\n    }catch(reason){\n      console.log(reason);\n      this.toastService.presentToast(\"User Registration Failed\");      \n      return false; \n    }\n    \n  }\n  async fetchUserByUserNameAndPassword(username : string,password : string) :Promise<any>{\n    try{\n      \n      const result =await this.storage.get(this.usersKey);\n      this.users=JSON.parse(result);\n      let fetchedUser= this.users.find(u=>u.email==username && u.user_password==password);\n      console.log('retrieved user'+fetchedUser);\n      return fetchedUser;\n    }catch(reason){\n      console.log(reason);\n      return null;\n    }\n  }\n\n  async createCustomer(customer :Customer) : Promise<any>{\n    try{\n      const value=await this.storage.get(this.customersKey);\n      this.customers=JSON.parse(value);\n      if(this.customers==null || this.customers==undefined){\n        this.customers=[];\n      }\n      this.customers.push(customer);\n      this.storage.set(this.customersKey,JSON.stringify(this.customers) );\n      return true;\n    }catch(reason){\n      console.log(reason);\n      return false;\n    }\n  }\n  findIndexToUpdate(newCustomer){\n    return newCustomer.name==this;\n  }\n  async UpdateCustomer(customer :Customer) : Promise<any>{\n    try{\n      const value=await this.storage.get(this.customersKey);\n      this.customers=JSON.parse(value);\n      let cust=this.customers.find(this.findIndexToUpdate,customer.name);\n      let index=this.customers.indexOf(cust);\n      this.customers[index]=customer;\n      this.storage.set(this.customersKey,JSON.stringify(this.customers) );\n      return true;\n    }catch(reason){\n      console.log(reason);\n      return false;\n    }\n  }\n  async getAllCustomers():Promise<any>{\n    try{\n      const result =await this.storage.get(this.customersKey);\n      this.customers= JSON.parse(result)\n      return this.customers;\n    }catch(reason){\n      console.log(reason);\n      this.toastService.presentToast(\"Failed to load the customers\");\n    }\n  }\n\n  async createOrUpdateInventory(inventory :Inventory) : Promise<any>{\n    try{\n      const value=await this.storage.get(this.inventoryKey);\n      this.inventories=JSON.parse(value);\n      if(this.inventories==null || this.inventories==undefined){\n        this.inventories=[];\n      }\n      this.inventories.push(inventory);\n      this.storage.set(this.inventoryKey,JSON.stringify(this.inventories) );\n      return true;\n    }catch(reason){\n      console.log(reason);\n      return false;\n    }\n  }\n\n\n  async getAllInventories():Promise<Inventory[]>{\n    try{\n      const result =await this.storage.get(this.inventoryKey);\n        this.inventories= JSON.parse(result)\n        return this.inventories;\n    }catch(reason){\n      console.log(reason);\n      this.toastService.presentToast(\"Failed to load the inventories\");   \n    }\n  }\n\n  async getAllInvoices():Promise<any>{\n    try{\n      const result =await this.storage.get(this.invoiceKey);\n        this.invoices= JSON.parse(result)\n        return this.invoices;\n    }catch(reason){\n      console.log(reason);\n      this.toastService.presentToast(\"Failed to load the invoices\");   \n    }\n  }\n\n  async createOrUpdateInvoice(invoice :Invoice) : Promise<any>{\n    try{\n      const value=await this.storage.get(this.invoiceKey);\n      this.invoices=JSON.parse(value);\n      if(this.invoices==null || this.invoices==undefined){\n        this.invoices=[];\n      }\n      this.invoices.push(invoice);\n      this.storage.set(this.invoiceKey,JSON.stringify(this.invoices) );\n      return true;\n    }catch(reason){\n      console.log(reason);\n      return false;\n    }\n  }\n\n  async incrementInvoiceNumber():Promise<any>{\n    let invoiceNumber; \n    invoiceNumber =await this.storage.get(this.invoiceNumberKey);\n    if(invoiceNumber ==null || invoiceNumber==undefined){\n      invoiceNumber=0;\n    }\n    invoiceNumber=invoiceNumber+1;\n    await this.storage.set(this.invoiceNumberKey,invoiceNumber);\n    return invoiceNumber;\n    \n  }\n\n  async getInvoiceNumber():Promise<any>{\n    let invoiceNumber; \n    invoiceNumber =await this.storage.get(this.invoiceNumberKey);\n    return invoiceNumber;\n    \n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial/ngx';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrintService {\n  public selectedPrinter:any;\n  constructor(public btSerial : BluetoothSerial) { }\n\n\n  searchBluetoothPrinter(){\n    return this.btSerial.list();\n  }\n\n  connectToBluetoothPrinter(macAddress){\n    return this.btSerial.connect(macAddress);\n  }\n\n  disconnectBluetoothPrinter(){\n    return this.btSerial.disconnect();\n  }\n\n  sendToBluetoothPrinter(macAddress,data){\n    this.connectToBluetoothPrinter(macAddress).subscribe(_=>{\n      this.btSerial.write(data).then(_=>{\n        this.btSerial.disconnect()}).catch(reason=>{console.log(reason)})\n    },err=>console.log(err));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastserviceService {\n\n  constructor(public toastController: ToastController) {\n\n   }\n   async presentToast(message : string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000\n    });\n    toast.present();\n  }\n}\n"],"sourceRoot":"webpack:///"}