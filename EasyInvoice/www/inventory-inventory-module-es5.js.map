{"version":3,"sources":["webpack:///src/app/inventory/inventory.page.scss","webpack:///src/app/inventory/inventory.page.html","webpack:///src/app/inventory/inventory.page.ts","webpack:///src/app/inventory/inventory-routing.module.ts","webpack:///src/app/inventory/inventory.module.ts"],"names":["InventoryPage","dbService","toastService","navCtrl","navigateRoot","getAllInventories","then","data","inventories","reason","console","log","inv","navigationExtras","queryParams","inventory","selector","template","routes","path","component","InventoryPageRoutingModule","imports","forChild","exports","InventoryPageModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYFA,aAAa;AAExB,+BAAmBC,SAAnB,EAAgDC,YAAhD,EACSC,OADT,EACgC;AAAA;;AADb,eAAAF,SAAA,GAAAA,SAAA;AAA6B,eAAAC,YAAA,GAAAA,YAAA;AACvC,eAAAC,OAAA,GAAAA,OAAA;AAA0B;;AAHX;AAAA;AAAA,iBAKxB,oBAAW,CACV;AANuB;AAAA;AAAA,iBAQxB,2BAAe;AAEb,iBAAKA,OAAL,CAAaC,YAAb,CAA0B,cAA1B;AACD;AAXuB;AAAA;AAAA,iBAalB,6BAAoB;;;;;;;;AACxB,2BAAKH,SAAL,CAAeI,iBAAf,GAAmCC,IAAnC,CAAwC,UAAAC,IAAI,EAAE;AAC5C,6BAAI,CAACC,WAAL,GAAiBD,IAAjB;AACD,uBAFD,WAES,UAAAE,MAAM,EAAE;AACfC,+BAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,uBAJD;;;;;;;;;AAKD;AAnBuB;AAAA;AAAA,iBAqBxB,4BAAgB;AACd,iBAAKJ,iBAAL;AACD;AAvBuB;AAAA;AAAA,iBAyBxB,uBAAcO,GAAd,EAAiB;AACf,gBAAIC,gBAAgB,GAAqB;AACvCC,yBAAW,EAAG;AAACC,yBAAS,EAAGH;AAAb;AADyB,aAAzC;AAGFF,mBAAO,CAACC,GAAR,CAAY,uBAAqBC,GAAjC;AACA,iBAAKT,OAAL,CAAaC,YAAb,CAA0B,cAA1B,EAAyCS,gBAAzC;AACC;AA/BuB;;AAAA;AAAA,S;;;;gBATjB;;gBAEA;;gBAHA;;;;AAUIb,mBAAa,6DALzB,gEAAU;AACTgB,gBAAQ,EAAE,eADD;AAETC,gBAAQ,EAAR,uEAFS;;AAAA,OAAV,CAKyB,GAAbjB,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPb,UAAMkB,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,0BAA0B;AAAA;AAAA,O;;AAA1BA,gCAA0B,6DAJtC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIsC,GAA1BH,0BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,mBAAmB;AAAA;AAAA,O;;AAAnBA,yBAAmB,6DAT/B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,oFAJO,CADD;AAORI,oBAAY,EAAE,CAAC,6DAAD;AAPN,OAAT,CAS+B,GAAnBD,mBAAmB,CAAnB","file":"inventory-inventory-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbnZlbnRvcnkucGFnZS5zY3NzIn0= */\";","export default \"\\n\\n<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Inventory</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button menu=\\\"mainmenu\\\"> \\n\\n        </ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content style=\\\"background-color: darkblue;\\\">\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Name</ion-label>\\n      <ion-label>Quantity</ion-label>\\n      <ion-label>Unit Price</ion-label>\\n      <ion-label>Purchase Price</ion-label>\\n    </ion-list-header>\\n    <ion-item *ngFor= \\\"let inv of inventories\\\" (click)=\\\"editInventory(inv)\\\">\\n      <ion-label>{{inv.name}}</ion-label>\\n      <ion-label>{{inv.quantity}}</ion-label>\\n      <ion-label>{{inv.unitPrice}}</ion-label>\\n      <ion-label>{{inv.purchasePrice}}</ion-label>\\n    </ion-item>\\n  </ion-list>    \\n  \\n</ion-content>\\n<ion-footer>\\n  \\n    \\n      <ion-row style=\\\"float:right\\\">\\n        <ion-col >\\n        <ion-button  color=\\\"primary\\\" (click)=\\\"addNewInventory()\\\">\\n          <ion-icon name=\\\"add-circle\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      </ion-row>\\n        \\n    \\n  \\n  \\n</ion-footer>\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { DbService } from '../services/db.service';\nimport { Inventory } from '../services/inventory';\nimport { ToastserviceService } from '../services/toastservice.service';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.page.html',\n  styleUrls: ['./inventory.page.scss'],\n})\nexport class InventoryPage implements OnInit {\n  private inventories : Inventory [];\n  constructor(public dbService : DbService,public toastService : ToastserviceService,\n    public navCtrl:NavController) { }\n\n  ngOnInit() {\n  }\n\n  addNewInventory(){\n    \n    this.navCtrl.navigateRoot('newinventory');\n  }\n\n  async getAllInventories() : Promise<any>{\n    this.dbService.getAllInventories().then(data=>{\n      this.inventories=data;\n    }).catch(reason=>{\n      console.log(reason);\n    })\n  }\n\n  ionViewWillEnter(){\n    this.getAllInventories();\n  }\n\n  editInventory(inv){\n    let navigationExtras : NavigationExtras ={\n      queryParams : {inventory : inv}\n    };\n  console.log(\"selected inventory\"+inv);\n  this.navCtrl.navigateRoot('newinventory',navigationExtras);    \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InventoryPage } from './inventory.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InventoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InventoryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InventoryPageRoutingModule } from './inventory-routing.module';\n\nimport { InventoryPage } from './inventory.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InventoryPageRoutingModule\n  ],\n  declarations: [InventoryPage]\n})\nexport class InventoryPageModule {}\n"]}