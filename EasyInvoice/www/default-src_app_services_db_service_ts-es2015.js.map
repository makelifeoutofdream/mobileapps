{"version":3,"sources":["./node_modules/uuid/dist/esm-browser/regex.js","./node_modules/uuid/dist/esm-browser/rng.js","./node_modules/uuid/dist/esm-browser/stringify.js","./node_modules/uuid/dist/esm-browser/v4.js","./node_modules/uuid/dist/esm-browser/validate.js","./src/app/services/db.service.ts","./src/app/services/toastservice.service.ts"],"names":[],"mappings":"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","file":"default-src_app_services_db_service_ts-es2015.js","sourcesContent":["export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","\nimport { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { User } from './user';\nimport {Customer} from './customer';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { ToastserviceService } from './toastservice.service';\nimport { Storage } from '@ionic/storage-angular';\nimport { Inventory } from './inventory';\nimport { Invoice } from './invoice';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Profile } from './profile';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DbService {\n  private usersKey=\"users\";\n  private customersKey=\"customers\";\n  private inventoryKey=\"inventories\";\n  private invoiceKey=\"invoices\";\n  private invoiceNumberKey=\"invoiceNumber\";\n  private profileKey=\"profile\";\n  private customerCodeKey=\"customerCode\";\n  private invoices : Invoice[] ;\n  private inventory : Inventory;\n  private inventories : Inventory[];\n  private customer : Customer;\n  private customers : Customer[];\n  private user : User;\n  private  users:User[]\n  constructor(\n    private httpClient: HttpClient,\n    private toastService : ToastserviceService,\n    private storage : Storage\n  ) {\n   this.init();\n  }\n\n  async init(){\n    const storageVar=await this.storage.create();\n    this.storage=storageVar;\n  }\n  \n  async signup(user : User) : Promise<any> {\n    try{\n      \n      let value=await this.storage.get(this.usersKey)\n      this.users=JSON.parse(value);\n      if(this.users==undefined || this.users==null){\n        this.users=[];\n      }\n      user.id=uuidv4();\n      this.users.push(user);\n      const result =await this.storage.set(this.usersKey,JSON.stringify(this.users));\n      console.log('user signed up successfully'+user);\n      return true;\n    }catch(reason){\n      console.log(reason);\n      this.toastService.presentToast(\"User Registration Failed\");      \n      return false; \n    }\n    \n  }\n  async fetchUserByUserNameAndPassword(username : string,password : string) :Promise<any>{\n    try{\n      \n      const result =await this.storage.get(this.usersKey);\n      this.users=JSON.parse(result);\n      let fetchedUser= this.users.find(u=>u.email==username && u.user_password==password);\n      console.log('retrieved user'+fetchedUser);\n      return fetchedUser;\n    }catch(reason){\n      console.log(reason);\n      return null;\n    }\n  }\n\n  async createCustomer(customer :Customer) : Promise<any>{\n    try{\n      const value=await this.storage.get(this.customersKey);\n      this.customers=JSON.parse(value);\n      if(this.customers==null || this.customers==undefined){\n        this.customers=[];\n      }\n      customer.id=uuidv4();\n      this.customers.push(customer);\n      this.storage.set(this.customersKey,JSON.stringify(this.customers) );\n      return true;\n    }catch(reason){\n      console.log(reason);\n      return false;\n    }\n  }\n  findIndexToUpdate(newCustomer){\n    return newCustomer.name==this;\n  }\n  async UpdateCustomer(customer :Customer) : Promise<any>{\n    try{\n      const value=await this.storage.get(this.customersKey);\n      this.customers=JSON.parse(value);\n      var index = this.customers.findIndex(i => i.id == customer.id);\n      this.customers[index]=customer;\n      this.storage.set(this.customersKey,JSON.stringify(this.customers) );\n      return true;\n    }catch(reason){\n      console.log(reason);\n      return false;\n    }\n  }\n  async getAllCustomers():Promise<any>{\n    try{\n      const result =await this.storage.get(this.customersKey);\n      this.customers= JSON.parse(result)\n      return this.customers;\n    }catch(reason){\n      console.log(reason);\n      this.toastService.presentToast(\"Failed to load the customers\");\n    }\n  }\n\n  async saveAllInventories(list : Inventory[]) : Promise<any>{\n    try{\n      const value=await this.storage.get(this.inventoryKey);\n      this.storage.set(this.inventoryKey,JSON.stringify(list) );\n      return true;\n    }catch(reason){\n      console.log(reason);\n      return false;\n    }\n  }\n  async createOrUpdateInventory(inventory :Inventory) : Promise<any>{\n    try{\n      const value=await this.storage.get(this.inventoryKey);\n      this.inventories=JSON.parse(value);\n      if(this.inventories==null || this.inventories==undefined){\n        this.inventories=[];\n      }\n      if(inventory.id==null  || inventory.id==undefined){\n        inventory.id=uuidv4();\n        this.inventories.push(inventory);\n      }else{\n        var index = this.inventories.findIndex(i => i.id == inventory.id);\n        this.inventories[index]=inventory;\n      }\n      this.storage.set(this.inventoryKey,JSON.stringify(this.inventories) );\n      return true;\n    }catch(reason){\n      console.log(reason);\n      return false;\n    }\n  }\n\n\n  async getAllInventories():Promise<Inventory[]>{\n    try{\n      const result =await this.storage.get(this.inventoryKey);\n        this.inventories= JSON.parse(result)\n        return this.inventories;\n    }catch(reason){\n      console.log(reason);\n      this.toastService.presentToast(\"Failed to load the inventories\");   \n    }\n  }\n\n  async getAllInvoices():Promise<any>{\n    try{\n      const result =await this.storage.get(this.invoiceKey);\n        this.invoices= JSON.parse(result)\n        return this.invoices;\n    }catch(reason){\n      console.log(reason);\n      this.toastService.presentToast(\"Failed to load the invoices\");   \n    }\n  }\n\n  async createOrUpdateInvoice(invoice :Invoice) : Promise<any>{\n    try{\n      const value=await this.storage.get(this.invoiceKey);\n      this.invoices=JSON.parse(value);\n      if(this.invoices==null || this.invoices==undefined){\n        this.invoices=[];\n      }\n      invoice.id=uuidv4();\n      this.invoices.push(invoice);\n      this.storage.set(this.invoiceKey,JSON.stringify(this.invoices) );\n      return true;\n    }catch(reason){\n      console.log(reason);\n      return false;\n    }\n  }\n\n  async incrementInvoiceNumber():Promise<any>{\n    let invoiceNumber : number; \n    invoiceNumber =await this.storage.get(this.invoiceNumberKey);\n    if(invoiceNumber ==null || invoiceNumber==undefined){\n      invoiceNumber=0;\n    }\n    invoiceNumber=invoiceNumber+1;\n    await this.storage.set(this.invoiceNumberKey,invoiceNumber);\n    return invoiceNumber;\n    \n  }\n\n  async getCustomerCode():Promise<any>{\n    let customerCode : number; \n    customerCode =await this.storage.get(this.customerCodeKey);\n    if(customerCode==null || customerCode==undefined){\n      this.incrementCustomerCode().then(data=>{\n        customerCode=data;\n      })\n    }\n    return customerCode;\n  }\n\n  async incrementCustomerCode():Promise<any>{\n    let customerCode : number; \n    customerCode =await this.storage.get(this.customerCodeKey);\n    if(customerCode ==null || customerCode==undefined){\n      customerCode=0;\n    }\n    customerCode=customerCode+1;\n    await this.storage.set(this.customerCodeKey,customerCode);\n    return customerCode;\n    \n  }\n\n  async getInvoiceNumber():Promise<any>{\n    let invoiceNumber; \n    invoiceNumber =await this.storage.get(this.invoiceNumberKey);\n    return invoiceNumber;\n    \n  }\n\n\nasync createOrUpdateProfile(userProfile : Profile) : Promise<Profile>{\n  try{\n   \n    if(userProfile.id==null || userProfile.id==undefined){\n      userProfile.id=uuidv4();\n    }\n    this.storage.set(this.profileKey,JSON.stringify(userProfile) );\n    return userProfile;\n  }catch(reason){\n    console.log(reason);\n    return null;\n  }\n}\n\nasync getProfile() : Promise<Profile>{\n  try{\n    let value=await this.storage.get(this.profileKey );\n    let profile=JSON.parse(value);\n    return profile;\n  }catch(reason){\n    console.log(reason);\n    new Object();\n  }\n}\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastserviceService {\n\n  constructor(public toastController: ToastController) {\n\n   }\n   async presentToast(message : string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000\n    });\n    toast.present();\n  }\n}\n"],"sourceRoot":"webpack:///"}