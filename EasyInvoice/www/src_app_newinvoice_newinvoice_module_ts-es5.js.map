{"version":3,"sources":["webpack:///src/app/newinvoice/newinvoice-routing.module.ts","webpack:///src/app/newinvoice/newinvoice.module.ts","webpack:///src/app/newinvoice/newinvoice.page.ts","webpack:///src/app/services/invoice.ts","webpack:///src/app/validation.service.ts","webpack:///src/app/newinvoice/newinvoice.page.scss","webpack:///src/app/newinvoice/newinvoice.page.html"],"names":["routes","path","component","NewinvoicePage","NewinvoicePageRoutingModule","NgModule","imports","RouterModule","exports","NewinvoicePageModule","CommonModule","FormsModule","IonicModule","IonicSelectableModule","declarations","dbService","tostService","navCtrl","printService","validationService","invoice","id","invoiceNumber","invoiceDate","Date","invoiceDateString","customer","contactPersonName","location","name","vat","itemList","invoiceItems","total","tax","applyVat","getProfile","then","data","profile","resetInvoiceForm","evt","product","unitPrice","billingUnitPrice","quantity","selected","purchaseUnitPrice","products","productsBackup","searchTerm","srcElement","value","filter","currentProduct","toLowerCase","indexOf","selectedProducts","Array","Invoice","incrementInvoiceNumber","getAllCustomers","customerList","undefined","console","log","inventory","inv","InvoiceItem","purchasePrice","push","itm","setHours","createOrUpdateInvoice","getAllInventories","stocks","stockList","index","findIndex","i","saveAllInventories","res","presentToast","navigateRoot","reason","sendToBluetoothPrinter","selectedPrinter","numericOnly","DbService","ToastserviceService","NavController","PrintService","ValidationService","Component","selector","template","event","pattern","result","test","key","Injectable","providedIn"],"mappings":"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","file":"src_app_newinvoice_newinvoice_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewinvoicePage } from './newinvoice.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewinvoicePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewinvoicePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewinvoicePageRoutingModule } from './newinvoice-routing.module';\n\nimport { NewinvoicePage } from './newinvoice.page';\nimport { IonicSelectableModule } from 'ionic-selectable';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NewinvoicePageRoutingModule,\n    IonicSelectableModule\n  ],\n  declarations: [NewinvoicePage]\n})\nexport class NewinvoicePageModule {}\n","import { isNgTemplate } from '@angular/compiler';\nimport { Component, IterableDiffers, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { threadId } from 'worker_threads';\nimport { Customer } from '../services/customer';\nimport { DbService } from '../services/db.service';\nimport { Inventory } from '../services/inventory';\nimport { Invoice } from '../services/invoice';\nimport { InvoiceItem } from '../services/invoiceitem';\nimport { PrintService } from '../services/print.service';\nimport { Profile } from '../services/profile';\nimport { ToastserviceService } from '../services/toastservice.service';\nimport { ValidationService } from '../validation.service';\n\n@Component({\n  selector: 'app-newinvoice',\n  templateUrl: './newinvoice.page.html',\n  styleUrls: ['./newinvoice.page.scss']\n})\nexport class NewinvoicePage implements OnInit {\n  private invoice : Invoice;\n  private product : InvoiceItem;\n  private customerList:Customer[];\n  private products:InvoiceItem[];\n  private productsBackup:InvoiceItem[];\n  private selectedProducts:InvoiceItem[];\n  private profile : Profile;\n  private applyVat : boolean;\n  constructor(public dbService:DbService,public tostService:ToastserviceService,public navCtrl:NavController,\n    public printService : PrintService,private validationService :ValidationService) { }\n\n  ngOnInit() {\n    this.invoice={id:null, invoiceNumber : \"\",invoiceDate: new Date() ,invoiceDateString : \"\",\n    customer : {id: null, contactPersonName : \"\",location  : \"\",name : \"\",vat:null,itemList : null},invoiceItems : [],\n  total:null,tax:null} \n}\n\n\nionViewWillEnter(){\n  this.applyVat=true;\n  this.dbService.getProfile().then(data=>{\n    this.profile=data;\n  });\n  this.resetInvoiceForm();\n}\n\n\nasync filterProducts(evt) {\n  this.product={id: null, name: \"\",unitPrice : null,billingUnitPrice:null,quantity:null,selected:null,purchaseUnitPrice:null};\n  this.products=this.productsBackup;\n  const searchTerm = evt.srcElement.value;\n\n  if (!searchTerm) {\n    return;\n  }\n\n  this.products = this.products.filter(currentProduct => {\n    if (currentProduct.name && searchTerm) {\n      return (currentProduct.name.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1);\n    }\n  });\n}\n\nproductSelected(evt){\n  this.selectedProducts=evt.value;\n  this.invoice.invoiceItems=this.selectedProducts;  \n}\n\nresetInvoiceForm(){\n  this.productsBackup=new Array();\n  this.products=new Array();\n  \n  this.invoice=new Invoice();\n  this.dbService.incrementInvoiceNumber().then(data=>{\n    this.invoice.invoiceNumber=data;\n  });\n\n  this.invoice.invoiceDate=new Date();\n  this.invoice.invoiceItems=new Array();\n  this.selectedProducts=new Array();\n  //this.dbService.getInvoiceNumber().then(data=>{\n    //this.invoice.invoiceNumber=data;\n  //});\n  this.dbService.getAllCustomers().then(data=>this.customerList=data);\n}\n  \npopulateCustomerProducts(){\n  if(this.invoice.customer!=null && this.invoice.customer!=undefined && this.invoice.customer.itemList!=null && this.invoice.customer.itemList!=undefined){\n    console.log(\"populateCustomerProducts\");\n    let inventory ;\n    for(let inv of this.invoice.customer.itemList){\n      inventory={id: inv.id, name : inv.name,unitPrice : inv.unitPrice,billingUnitPrice:null,quantity:null,InvoiceItem:[],purchasePrice:inv.purchasePrice};\n        this.products.push(inventory);\n        this.productsBackup.push(inventory);\n    }\n  }\n  \n}\n\ncalculateInvoiceTotal(evt){\n  this.invoice.total=0;\n  if(undefined==this.invoice.total || null==this.invoice.total){\n    this.invoice.total=0;\n  }\n  for(let itm of this.invoice.invoiceItems){\n    this.invoice.total=this.invoice.total+ (itm.unitPrice*itm.quantity);\n  }\n  //apply vat\n  if(this.applyVat){\n    if(this.profile!=null && this.profile!=undefined && this.profile.vat!=null && this.profile.vat!=undefined){\n      this.invoice.tax=(this.profile.vat*this.invoice.total)/100;\n      this.invoice.total=this.invoice.total+this.invoice.tax;\n    }\n  \n  }\n  \n  \n}\n\nsubmitBill(){\n  this.invoice.invoiceDate.setHours(0,0,0,0);\n  this.dbService.createOrUpdateInvoice(this.invoice).then(data=>{\n    this.dbService.getAllInventories().then(stocks=>{\n      let stockList=stocks;\n      for(let itm of this.invoice.invoiceItems){\n        var index = stockList.findIndex(i => i.id == itm.id);\n        stockList[index].quantity=stockList[index].quantity-itm.quantity;\n      }\n      this.dbService.saveAllInventories(stockList).then(res=>{\n        this.tostService.presentToast(\"Bill submitted successfully\");\n        this.navCtrl.navigateRoot('invoice');\n      })\n    });\n  }).catch(reason=>{\n    this.tostService.presentToast(\"Failed to submit bill\");\n    console.log(reason);\n  })\n}\n\nprintBill(){\n  let data='---------------------RECEIPT-----------------------\\n\\n\\nDate :'+this.invoice.invoiceDate+'\\nInvoice Number :'+this.invoice.invoiceNumber+'\\nCustomer:'+this.invoice.customer+'/n/n';\n  for(let itm of this.invoice.invoiceItems){\n    data=data+'Item Name :'+itm.name+'  Price :'+itm.unitPrice+'  Quantity :'+itm.quantity;\n  }\n  data=data+'-----------------------------------------------------------------------';\n  data=data+'\\n Vat Applied :'+this.invoice.customer.vat;\n  data=data+'\\n Total :'+this.invoice.total;\n  this.printService.sendToBluetoothPrinter(this.printService.selectedPrinter,data);\n}\n\nnumericOnly(evt){\n  return this.validationService.numericOnly(evt);\n}\n}\n","import { InvoiceItem } from \"./invoiceitem\";\nimport {Customer} from './customer';\nexport class Invoice{\n    id : number;\n    invoiceNumber : string;\n    invoiceItems : InvoiceItem [];\n    invoiceDate : Date ;\n    customer : Customer;\n    total : number;\n    tax : number;\n    invoiceDateString : string;\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationService {\n\n  constructor() { }\n\n\nnumericOnly(event): boolean {\n  let pattern = /^([0-9])$/;\n  let result = pattern.test(event.key);\n  return result;\n}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuZXdpbnZvaWNlLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>New Invoice</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"row\\\"></div>\\n   \\n<ion-select style=\\\"margin-top: 2%;height: 30px;margin-right: 4%;\\\" (ionChange)=\\\"populateCustomerProducts()\\\" [(ngModel)]=\\\"invoice.customer\\\" placeholder=\\\"Select Customer\\\">\\n  <ion-select-option *ngFor=\\\"let cus of customerList\\\" [value]=\\\"cus\\\">{{cus.name}}</ion-select-option>\\n</ion-select>\\n<ion-item>\\n  <ion-label>Product</ion-label>\\n  <ionic-selectable style=\\\"height: 30px;\\\"\\n    \\n    [(ngModel)]=\\\"product\\\"\\n    [items]=\\\"products\\\"\\n    itemValueField=\\\"name\\\"\\n    itemTextField=\\\"name\\\"\\n    [canSearch]=\\\"true\\\"\\n    (onChange)=\\\"productSelected($event)\\\"\\n    [isMultiple]=\\\"true\\\">\\n  </ionic-selectable>\\n</ion-item> \\n<table border=\\\"5\\\" style=\\\"width: 94%;margin-left: 2%;margin-right: 5%;margin-top: 2%;\\\">\\n  <tr>\\n    <td>\\n      Item\\n    </td>\\n    <td>\\n      Price\\n    </td>\\n    <td>\\n      Purchase Price\\n    </td>\\n    <td>\\n      Quantity\\n    </td>\\n  </tr>\\n  <tr *ngFor= \\\"let item of invoice.invoiceItems\\\" >\\n    <td><ion-input  disabled [(ngModel)]=\\\"item.name\\\" ></ion-input></td>\\n    <td><ion-input (ionChange)=\\\"calculateInvoiceTotal()\\\" type=\\\"number\\\" [(ngModel)]=\\\"item.unitPrice\\\" ></ion-input></td>\\n    <td><ion-input (ionChange)=\\\"calculateInvoiceTotal()\\\" type=\\\"number\\\" [(ngModel)]=\\\"item.purchasePrice\\\" ></ion-input></td>\\n    <td><ion-input (ionChange)=\\\"calculateInvoiceTotal()\\\" type=\\\"number\\\" [(ngModel)]=\\\"item.quantity\\\"  (keypress)=\\\"numericOnly($event)\\\"></ion-input></td>\\n  </tr>\\n</table>\\n\\n<ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"6\\\">\\n        <ion-label color=\\\"primary\\\">Amount To Be Paid</ion-label>\\n      </ion-col>\\n      <ion-col size=\\\"6\\\">\\n        <ion-label >{{invoice.total}}</ion-label>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\">\\n        <ion-label color=\\\"primary\\\">Apply VAT</ion-label>\\n      </ion-col>\\n      <ion-col size=\\\"6\\\">\\n        <ion-checkbox color=\\\"primary\\\" [(ngModel)]=\\\"applyVat\\\" (ionChange)=\\\"calculateInvoiceTotal()\\\" ></ion-checkbox>\\n      </ion-col>\\n      \\n    </ion-row>  \\n    <!-- <ion-row>\\n      <ion-col size=\\\"6\\\">\\n        <ion-label color=\\\"primary\\\">Invoice Number</ion-label>\\n      </ion-col>\\n      <ion-col size=\\\"6\\\">\\n        <ion-label >{{invoice.invoiceNumber}}</ion-label>\\n      </ion-col>\\n    </ion-row>   -->\\n  \\n  </ion-grid>\\n    <ion-grid>\\n      <ion-row> \\n        <ion-col size=\\\"3\\\">\\n          <ion-button color=\\\"primary\\\" (click)=\\\"submitBill()\\\">Submit</ion-button>\\n        </ion-col>\\n        \\n        <ion-col size=\\\"3\\\">\\n          <ion-button color=\\\"primary\\\" (click)=\\\"printBill()\\\">Print</ion-button>\\n        </ion-col>\\n\\n      </ion-row>\\n    </ion-grid>\\n</ion-content>\\n\";"]}