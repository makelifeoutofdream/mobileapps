{"version":3,"sources":["webpack:///src/app/newpurchase/newpurchase-routing.module.ts","webpack:///src/app/newpurchase/newpurchase.module.ts","webpack:///src/app/newpurchase/newpurchase.page.ts","webpack:///src/app/newpurchase/newpurchase.page.scss","webpack:///src/app/newpurchase/newpurchase.page.html"],"names":["routes","path","component","NewpurchasePage","NewpurchasePageRoutingModule","NgModule","imports","RouterModule","exports","NewpurchasePageModule","CommonModule","FormsModule","IonicModule","IonicSelectableModule","declarations","dbService","navCtrl","tostService","validationService","showTable","resetPurchase","purchase","id","poNumber","purchaseDate","Date","deliveryDate","purchaseItems","incrementPurchaseCode","then","data","getPurchaseCode","console","log","undefined","codeConstant","purchaseCodeConstant","getAllInventories","products","getAllSuppliers","supplierList","evt","selectedProducts","value","inv","pItem","item","code","name","nameInArabic","description","quantity","purchasePrice","unitPrice","orderQuantity","deliverQuantity","price","push","createPurchase","updateStock","presentToast","reason","navigateRoot","numericOnly","DbService","NavController","ToastserviceService","ValidationService","Component","selector","template"],"mappings":"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","file":"src_app_newpurchase_newpurchase_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewpurchasePage } from './newpurchase.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewpurchasePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewpurchasePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewpurchasePageRoutingModule } from './newpurchase-routing.module';\n\nimport { NewpurchasePage } from './newpurchase.page';\nimport { IonicSelectableModule } from 'ionic-selectable';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NewpurchasePageRoutingModule,\n    IonicSelectableModule\n  ],\n  declarations: [NewpurchasePage]\n})\nexport class NewpurchasePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { DbService } from '../services/db.service';\nimport { Inventory } from '../services/inventory';\nimport { Purchase } from '../services/purchase';\nimport { PurchaseItem } from '../services/PurchaseItem';\nimport { ToastserviceService } from '../services/toastservice.service';\nimport { ValidationService } from '../validation.service';\n\n@Component({\n  selector: 'app-newpurchase',\n  templateUrl: './newpurchase.page.html',\n  styleUrls: ['./newpurchase.page.scss'],\n})\nexport class NewpurchasePage implements OnInit {\n  private supplierList : any;\n  private product : Inventory;\n  private products : Inventory[];\n  private selectedProducts : Inventory[];\n  private purchase : Purchase;\n  private showTable=false;\n  constructor(private dbService:DbService,public navCtrl:NavController, public tostService:ToastserviceService,private validationService :ValidationService )  { }\n\n  ngOnInit() {\n    this.resetPurchase();\n   \n  }\nresetPurchase(){\n  this.purchase={id: null,poNumber:null,purchaseDate:new Date(),deliveryDate:new Date(),purchaseItems:[]}\n}\n  ionViewWillEnter(){\n    this.showTable=false;\n    this.resetPurchase();\n    this.dbService.incrementPurchaseCode().then(data=>{\n      this.dbService.getPurchaseCode().then(data=>{\n        console.log(\"purchase no\"+data);\n        if(data==null || data==undefined){\n          data=1;\n        }\n        this.purchase.poNumber=this.dbService.codeConstant+this.dbService.purchaseCodeConstant+ data;\n      })\n    })\n    \n    this.dbService.getAllInventories().then(data=>{\n      this.products=data;\n    })\n    this.dbService.getAllSuppliers().then(data=>{\n      this.supplierList=data;\n    })\n\n    \n  }\n\n\n  populateSupplier(){\n    this.dbService.getAllSuppliers().then(data=>{\n      this.supplierList=data;\n    })\n  }\n\n  productSelected(evt){\n    this.selectedProducts=evt.value;\n    \n    for(let inv of this.selectedProducts){\n      let pItem : PurchaseItem={item:{id:null,code:\"\",name:\"\",nameInArabic:\"\",description:\"\",quantity:null,purchasePrice:null,unitPrice:null},orderQuantity:null,deliverQuantity:null,price:null}; \n      pItem.item=inv;\n      this.purchase.purchaseItems.push(pItem);\n      this.showTable=true;\n    }\n  }\n\n  async addNewPurchase() :Promise<any>{\n    \n    this.dbService.createPurchase(this.purchase).then(data=>{\n      this.dbService.incrementPurchaseCode();\n      this.dbService.updateStock(this.purchase.purchaseItems).then(data=>{\n        this.tostService.presentToast(\"Purchase added successfully\");      \n      })\n      \n    }).catch(reason=>{\n      console.log(reason);\n    }).finally(()=>{\n      this.resetPurchase();\n      this.navCtrl.navigateRoot('purchase');\n    });\n  } \n\n  numericOnly(evt){\n    return this.validationService.numericOnly(evt);\n  }\n\n  showPurchase(){\n    this.navCtrl.navigateRoot('purchase');\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuZXdwdXJjaGFzZS5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button menu=\\\"mainmenu\\\"> \\n\\n      </ion-menu-button>\\n    </ion-buttons> \\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-back-button defaultHref=\\\"home\\\" (click)=\\\"showPurchase()\\\"> </ion-back-button>\\n      \\n    </ion-buttons>\\n    <ion-title>New Purchase</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"6\\\">\\n          <ion-item style=\\\"margin-top: 2%;\\\">\\n            <ion-label position=\\\"floating\\\">PO No</ion-label>\\n            <ion-input name=\\\"poNumber\\\" type=\\\"text\\\" [(ngModel)]=\\\"purchase.poNumber\\\" required></ion-input>\\n          </ion-item>\\n      </ion-col>\\n      <ion-col size=\\\"6\\\">\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Date</ion-label>\\n          <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"purchase.purchaseDate\\\" required ></ion-datetime>\\n        </ion-item>\\n    </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"6\\\">\\n        <ion-item style=\\\"margin-top: 7%;\\\">\\n        <ion-select style=\\\"margin-top: 2%;height: 30px;margin-right: 4%;\\\"  [(ngModel)]=\\\"purchase.supplier\\\" placeholder=\\\"Select Supplier\\\">\\n          <ion-select-option *ngFor=\\\"let sup of supplierList\\\" [value]=\\\"sup\\\">{{sup.name}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n        <ion-item >\\n          <ion-label position=\\\"floating\\\">Delivery Date</ion-label>\\n          <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"purchase.deliveryDate\\\" required ></ion-datetime>\\n        </ion-item> \\n       </ion-col>\\n    </ion-row>\\n    \\n    <ion-item>\\n      <ion-label>Product</ion-label>\\n      <ionic-selectable style=\\\"height: 30px;\\\"\\n        \\n        [(ngModel)]=\\\"product\\\"\\n        [items]=\\\"products\\\"\\n        itemValueField=\\\"name\\\"\\n        itemTextField=\\\"name\\\"\\n        [canSearch]=\\\"true\\\"\\n        (onChange)=\\\"productSelected($event)\\\"\\n        [isMultiple]=\\\"true\\\">\\n      </ionic-selectable>\\n    </ion-item> \\n    \\n<table *ngIf=\\\"showTable\\\" border=\\\"none\\\" style=\\\"width: 94%;margin-left: 2%;margin-right: 5%;margin-top: 2%; color: black;background-color: aliceblue; text-align: center;\\\">\\n  <tr style=\\\"border: none; color: white; background-color: lightslategray;\\\">\\n    <td>\\n      Item Code\\n    </td>\\n    <td>\\n      Item Name\\n    </td>\\n    <td>\\n      Order Quantity\\n    </td>\\n    <td>\\n      Received Quantity\\n    </td>\\n    <td>\\n      Price\\n    </td>\\n  </tr>\\n  <tr *ngFor= \\\"let pItem of purchase.purchaseItems\\\" style=\\\"border: none;\\\">\\n    <td><ion-input  disabled [(ngModel)]=\\\"pItem.item.code\\\" ></ion-input></td>\\n    <td><ion-input  disabled [(ngModel)]=\\\"pItem.item.name\\\" ></ion-input></td>\\n    <td><ion-input  type=\\\"number\\\" [(ngModel)]=\\\"pItem.orderQuantity\\\"  (keypress)=\\\"numericOnly($event)\\\"></ion-input></td>\\n    <td><ion-input  type=\\\"number\\\" [(ngModel)]=\\\"pItem.deliverQuantity\\\"  (keypress)=\\\"numericOnly($event)\\\"></ion-input></td>\\n    <td><ion-input  type=\\\"number\\\" [(ngModel)]=\\\"pItem.price\\\"  ></ion-input></td>\\n  </tr>\\n</table>\\n    </ion-grid>\\n    <ion-row style=\\\"float:right\\\">\\n      <ion-col >\\n      <ion-button  color=\\\"primary\\\" (click)=\\\"addNewPurchase()\\\">\\n        <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n       \\n        \\n      </ion-button>\\n    </ion-col>\\n    </ion-row>\\n    \\n    \\n</ion-content>\\n\";"]}