{"version":3,"sources":["webpack:///node_modules/uuid/dist/esm-browser/regex.js","webpack:///node_modules/uuid/dist/esm-browser/rng.js","webpack:///node_modules/uuid/dist/esm-browser/stringify.js","webpack:///node_modules/uuid/dist/esm-browser/v4.js","webpack:///node_modules/uuid/dist/esm-browser/validate.js","webpack:///src/app/services/db.service.ts","webpack:///src/app/services/toastservice.service.ts"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","uuid","toLowerCase","TypeError","v4","options","buf","rnds","random","validate","DbService","httpClient","toastService","storage","usersKey","customersKey","inventoryKey","invoiceKey","invoiceNumberKey","profileKey","customerCodeKey","supplierCodeKey","supplierKey","purchaseKey","purchaseCodeKey","inventoryCodeKey","codeConstant","inventoyCodeConstant","purchaseCodeConstant","customerCodeConstant","supplierCodeConstant","invoiceCodeConstant","printerKey","init","create","storageVar","user","get","value","users","JSON","parse","id","set","result","console","log","presentToast","username","password","fetchedUser","find","u","email","user_password","customer","customers","newCustomer","name","index","findIndex","suppliers","list","inventory","inventories","invoices","invoice","invoiceNumber","customerCode","supplierCode","userProfile","profile","Object","supplier","purchaseList","purchase","purchaseCode","purchaseItemList","pItem","item","quantity","deliverQuantity","inventoryCode","macAddress","HttpClient","ToastserviceService","Storage","Injectable","providedIn","toastController","message","duration","toast","present","ToastController"],"mappings":"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","file":"default-src_app_services_db_service_ts-es5.js","sourcesContent":["export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","\nimport { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { User } from './user';\nimport {Customer} from './customer';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { ToastserviceService } from './toastservice.service';\nimport { Storage } from '@ionic/storage-angular';\nimport { Inventory } from './inventory';\nimport { Invoice } from './invoice';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Profile } from './profile';\nimport { Supplier } from './supplier';\nimport { Purchase } from './purchase';\nimport { PurchaseItem } from './PurchaseItem';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DbService {\n  private usersKey=\"users\";\n  private customersKey=\"customers\";\n  private inventoryKey=\"inventories\";\n  private invoiceKey=\"invoices\";\n  private invoiceNumberKey=\"invoiceNumber\";\n  private profileKey=\"profile\";\n  private customerCodeKey=\"customerCode\";\n  private supplierCodeKey=\"supplierCode\";\n  private supplierKey =\"supplier\";\n  private purchaseKey=\"purchase\";\n  private purchaseCodeKey=\"purchaseCode\";\n  private inventoryCodeKey=\"inventoryCode\";\n  private invoices : Invoice[] ;\n  private inventory : Inventory;\n  private inventories : Inventory[];\n  private customer : Customer;\n  private customers : Customer[];\n  private suppliers : Supplier [];\n  private user : User;\n  private  users:User[]\n  public codeConstant=\"SA-RY-\";\n  public inventoyCodeConstant=\"STO\";\n  public purchaseCodeConstant=\"PUR\";\n  public customerCodeConstant=\"CUS\";\n  public supplierCodeConstant=\"SUP\";\n  public invoiceCodeConstant=\"INV\";\n  private printerKey=\"printer\";\n  constructor(\n    private httpClient: HttpClient,\n    private toastService : ToastserviceService,\n    private storage : Storage\n  ) {\n   this.init();\n  }\n\n  async init(){\n    const storageVar=await this.storage.create();\n    this.storage=storageVar;\n  }\n  \n  async signup(user : User) : Promise<any> {\n    try{\n      \n      let value=await this.storage.get(this.usersKey)\n      this.users=JSON.parse(value);\n      if(this.users==undefined || this.users==null){\n        this.users=[];\n      }\n      user.id=uuidv4();\n      this.users.push(user);\n      const result =await this.storage.set(this.usersKey,JSON.stringify(this.users));\n      console.log('user signed up successfully'+user);\n      return true;\n    }catch(reason){\n      console.log(reason);\n      this.toastService.presentToast(\"User Registration Failed\");      \n      return false; \n    }\n    \n  }\n  async fetchUserByUserNameAndPassword(username : string,password : string) :Promise<any>{\n    try{\n      \n      const result =await this.storage.get(this.usersKey);\n      this.users=JSON.parse(result);\n      let fetchedUser= this.users.find(u=>u.email==username && u.user_password==password);\n      console.log('retrieved user'+fetchedUser);\n      return fetchedUser;\n    }catch(reason){\n      console.log(reason);\n      return null;\n    }\n  }\n\n  async createCustomer(customer :Customer) : Promise<any>{\n    try{\n      const value=await this.storage.get(this.customersKey);\n      this.customers=JSON.parse(value);\n      if(this.customers==null || this.customers==undefined){\n        this.customers=[];\n      }\n      customer.id=uuidv4();\n      this.customers.push(customer);\n      this.storage.set(this.customersKey,JSON.stringify(this.customers) );\n      return true;\n    }catch(reason){\n      console.log(reason);\n      return false;\n    }\n  }\n  findIndexToUpdate(newCustomer){\n    return newCustomer.name==this;\n  }\n  async UpdateCustomer(customer :Customer) : Promise<any>{\n    try{\n      const value=await this.storage.get(this.customersKey);\n      this.customers=JSON.parse(value);\n      var index = this.customers.findIndex(i => i.id == customer.id);\n      this.customers[index]=customer;\n      this.storage.set(this.customersKey,JSON.stringify(this.customers) );\n      return true;\n    }catch(reason){\n      console.log(reason);\n      return false;\n    }\n  }\n  async getAllCustomers():Promise<any>{\n    try{\n      const result =await this.storage.get(this.customersKey);\n      this.customers= JSON.parse(result)\n      return this.customers;\n    }catch(reason){\n      console.log(reason);\n      this.toastService.presentToast(\"Failed to load the customers\");\n    }\n  }\n\n  async getAllSuppliers():Promise<any>{\n    try{\n      const result =await this.storage.get(this.supplierKey);\n      let suppliers= JSON.parse(result)\n      return suppliers;\n    }catch(reason){\n      console.log(reason);\n      this.toastService.presentToast(\"Failed to load the suppliers\");\n    }\n  }\n\n  async saveAllInventories(list : Inventory[]) : Promise<any>{\n    try{\n      const value=await this.storage.get(this.inventoryKey);\n      this.storage.set(this.inventoryKey,JSON.stringify(list) );\n      return true;\n    }catch(reason){\n      console.log(reason);\n      return false;\n    }\n  }\n  async createOrUpdateInventory(inventory :Inventory) : Promise<any>{\n    try{\n      const value=await this.storage.get(this.inventoryKey);\n      this.inventories=JSON.parse(value);\n      if(this.inventories==null || this.inventories==undefined){\n        this.inventories=[];\n      }\n      \n      if(inventory.id==null  || inventory.id==undefined){\n        inventory.id=uuidv4();\n        this.inventories.push(inventory);\n      }else{\n        var index = this.inventories.findIndex(i => i.id == inventory.id);\n        this.inventories[index]=inventory;\n      }\n      this.storage.set(this.inventoryKey,JSON.stringify(this.inventories) );\n      return true;\n    }catch(reason){\n      console.log(reason);\n      return false;\n    }\n  }\n\n\n  async getAllInventories():Promise<Inventory[]>{\n    try{\n      const result =await this.storage.get(this.inventoryKey);\n        this.inventories= JSON.parse(result)\n        return this.inventories;\n    }catch(reason){\n      console.log(reason);\n      this.toastService.presentToast(\"Failed to load the inventories\");   \n    }\n  }\n\n  async getAllInvoices():Promise<any>{\n    try{\n      const result =await this.storage.get(this.invoiceKey);\n        this.invoices= JSON.parse(result)\n        return this.invoices;\n    }catch(reason){\n      console.log(reason);\n      this.toastService.presentToast(\"Failed to load the invoices\");   \n    }\n  }\n\n  async createOrUpdateInvoice(invoice :Invoice) : Promise<any>{\n    try{\n      const value=await this.storage.get(this.invoiceKey);\n      this.invoices=JSON.parse(value);\n      if(this.invoices==null || this.invoices==undefined){\n        this.invoices=[];\n      }\n      invoice.id=uuidv4();\n      this.invoices.push(invoice);\n      this.storage.set(this.invoiceKey,JSON.stringify(this.invoices) );\n      return true;\n    }catch(reason){\n      console.log(reason);\n      return false;\n    }\n  }\n\n  async incrementInvoiceNumber():Promise<any>{\n    let invoiceNumber : number; \n    invoiceNumber =await this.storage.get(this.invoiceNumberKey);\n    if(invoiceNumber ==null || invoiceNumber==undefined){\n      invoiceNumber=0;\n    }\n    invoiceNumber=invoiceNumber+1;\n    await this.storage.set(this.invoiceNumberKey,invoiceNumber);\n    return invoiceNumber;\n    \n  }\n\n  async getCustomerCode():Promise<any>{\n    let customerCode : number; \n    customerCode =await this.storage.get(this.customerCodeKey);\n    return customerCode;\n  }\n\n  async incrementCustomerCode():Promise<any>{\n    let customerCode : number; \n    customerCode =await this.storage.get(this.customerCodeKey);\n    if(customerCode ==null || customerCode==undefined){\n      customerCode=0;\n    }\n    customerCode=customerCode+1;\n    await this.storage.set(this.customerCodeKey,customerCode);\n    return customerCode;\n    \n  }\n\n\n  async getSupplierCode():Promise<any>{\n    let supplierCode : number; \n    supplierCode =await this.storage.get(this.supplierCodeKey);\n    \n     \n    \n    return supplierCode;\n  }\n  async incrementSupplierCode():Promise<any>{\n    let supplierCode : number; \n    supplierCode =await this.storage.get(this.supplierCodeKey);\n    if(supplierCode ==null || supplierCode==undefined){\n      supplierCode=0;\n    }\n    supplierCode=supplierCode+1;\n    await this.storage.set(this.supplierCodeKey,supplierCode);\n    return supplierCode;\n    \n  }\n\n  async getInvoiceNumber():Promise<any>{\n    let invoiceNumber; \n    invoiceNumber =await this.storage.get(this.invoiceNumberKey);\n    return invoiceNumber;\n    \n  }\n\n\nasync createOrUpdateProfile(userProfile : Profile) : Promise<Profile>{\n  try{\n   \n    if(userProfile.id==null || userProfile.id==undefined){\n      userProfile.id=uuidv4();\n    }\n    this.storage.set(this.profileKey,JSON.stringify(userProfile) );\n    return userProfile;\n  }catch(reason){\n    console.log(reason);\n    return null;\n  }\n}\n\nasync getProfile() : Promise<Profile>{\n  try{\n    let value=await this.storage.get(this.profileKey );\n    let profile=JSON.parse(value);\n    return profile;\n  }catch(reason){\n    console.log(reason);\n    new Object();\n  }\n}\n\n\nasync createSupplier(supplier :Supplier) : Promise<any>{\n  try{\n    const value=await this.storage.get(this.supplierKey);\n    this.suppliers=JSON.parse(value);\n    if(this.suppliers==null || this.suppliers==undefined){\n      this.suppliers=[];\n    }\n    supplier.id=uuidv4();\n    this.suppliers.push(supplier);\n    this.storage.set(this.supplierKey,JSON.stringify(this.suppliers) );\n    return true;\n  }catch(reason){\n    console.log(reason);\n    return false;\n  }\n}\n\nasync UpdateSupplier(supplier :Supplier) : Promise<any>{\n  try{\n    const value=await this.storage.get(this.supplierKey);\n    this.suppliers=JSON.parse(value);\n    var index = this.suppliers.findIndex(i => i.id == supplier.id);\n    this.suppliers[index]=supplier;\n    this.storage.set(this.supplierKey,JSON.stringify(this.suppliers) );\n    return true;\n  }catch(reason){\n    console.log(reason);\n    return false;\n  }\n}\n\nasync getAllPurchases():Promise<any>{\n  try{\n    const result =await this.storage.get(this.purchaseKey);\n      let purchaseList= JSON.parse(result)\n      return purchaseList;\n  }catch(reason){\n    console.log(reason);\n    this.toastService.presentToast(\"Failed to load the purchases\");   \n  }\n}\nasync createPurchase(purchase :Purchase) : Promise<any>{\n  try{\n    const value=await this.storage.get(this.purchaseKey);\n    let purchaseList=JSON.parse(value);\n    if(purchaseList==null || purchaseList==undefined){\n      purchaseList=[];\n    }\n    purchase.id=uuidv4();\n    purchaseList.push(purchase);\n    this.storage.set(this.purchaseKey,JSON.stringify(purchaseList) );\n    return true;\n  }catch(reason){\n    console.log(reason);\n    return false;\n  }\n}\n\nasync getPurchaseCode():Promise<any>{\n  let purchaseCode : number; \n  purchaseCode =await this.storage.get(this.purchaseCodeKey);\n  return purchaseCode;\n}\nasync incrementPurchaseCode():Promise<any>{\n  let purchaseCode : number; \n  purchaseCode =await this.storage.get(this.purchaseCodeKey);\n  if(purchaseCode ==null || purchaseCode==undefined){\n    purchaseCode=0;\n  }\n  purchaseCode=purchaseCode+1;\n  await this.storage.set(this.purchaseCodeKey,purchaseCode);\n  return purchaseCode;\n  \n}\n\nasync updateStock(purchaseItemList :PurchaseItem[]) : Promise<any>{\n  try{\n    const value=await this.storage.get(this.inventoryKey);\n    let inventories=JSON.parse(value);\n    for(let pItem of purchaseItemList){\n      var index = inventories.findIndex(i => i.id == pItem.item.id);\n      let inventory : Inventory=this.inventories[index];\n      inventory.quantity=inventory.quantity+pItem.deliverQuantity;\n      this.storage.set(this.inventoryKey,JSON.stringify(this.inventories) );\n    }\n    return true;\n  }catch(reason){\n    console.log(reason);\n    return false;\n  }\n}\n\n\nasync getInventoryCode():Promise<any>{\n  let inventoryCode : number; \n  inventoryCode =await this.storage.get(this.inventoryCodeKey);\n  return inventoryCode;\n}\nasync incrementInventoryCode():Promise<any>{\n  let inventoryCode : number; \n  inventoryCode =await this.storage.get(this.inventoryCodeKey);\n  if(inventoryCode ==null || inventoryCode==undefined){\n    inventoryCode=0;\n  }\n  inventoryCode=inventoryCode+1;\n  await this.storage.set(this.inventoryCodeKey,inventoryCode);\n  return inventoryCode;\n  \n}\n\n\nasync savePrinter(macAddress :any) : Promise<any>{\n  try{\n    this.storage.set(this.printerKey,macAddress );\n    return true;\n  }catch(reason){\n    console.log(reason);\n    return false;\n  }\n}\n\nasync getPrinter():Promise<any>{\n  return  this.storage.get(this.printerKey );\n}\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastserviceService {\n\n  constructor(public toastController: ToastController) {\n\n   }\n   async presentToast(message : string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000\n    });\n    toast.present();\n  }\n}\n"]}